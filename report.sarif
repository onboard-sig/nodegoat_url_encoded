{
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/main/sarif-2.1/schema/sarif-schema-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "fullName": "Trivy Vulnerability Scanner",
          "informationUri": "https://github.com/aquasecurity/trivy",
          "name": "Trivy",
          "rules": [
            {
              "id": "CVE-2024-45590",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "body-parser: Denial of Service Vulnerability in body-parser"
              },
              "fullDescription": {
                "text": "body-parser is Node.js body parsing middleware. body-parser \u0026lt;1.20.3 is vulnerable to denial of service when url encoding is enabled. A malicious actor using a specially crafted payload could flood the server with a large number of requests, resulting in denial of service. This issue is patched in 1.20.3."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-45590",
              "help": {
                "text": "Vulnerability CVE-2024-45590\nSeverity: HIGH\nPackage: body-parser\nFixed Version: 1.20.3\nLink: [CVE-2024-45590](https://avd.aquasec.com/nvd/cve-2024-45590)\nbody-parser is Node.js body parsing middleware. body-parser \u003c1.20.3 is vulnerable to denial of service when url encoding is enabled. A malicious actor using a specially crafted payload could flood the server with a large number of requests, resulting in denial of service. This issue is patched in 1.20.3.",
                "markdown": "**Vulnerability CVE-2024-45590**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|body-parser|1.20.3|[CVE-2024-45590](https://avd.aquasec.com/nvd/cve-2024-45590)|\n\nbody-parser is Node.js body parsing middleware. body-parser \u003c1.20.3 is vulnerable to denial of service when url encoding is enabled. A malicious actor using a specially crafted payload could flood the server with a large number of requests, resulting in denial of service. This issue is patched in 1.20.3."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-4068",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "braces: fails to limit the number of characters it can handle"
              },
              "fullDescription": {
                "text": "The NPM package `braces`, versions prior to 3.0.3, fails to limit the number of characters it can handle, which could lead to Memory Exhaustion. In `lib/parse.js,` if a malicious user sends \u0026#34;imbalanced braces\u0026#34; as input, the parsing will enter a loop, which will cause the program to start allocating heap memory without freeing it at any moment of the loop. Eventually, the JavaScript heap limit is reached, and the program will crash."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-4068",
              "help": {
                "text": "Vulnerability CVE-2024-4068\nSeverity: HIGH\nPackage: braces\nFixed Version: 3.0.3\nLink: [CVE-2024-4068](https://avd.aquasec.com/nvd/cve-2024-4068)\nThe NPM package `braces`, versions prior to 3.0.3, fails to limit the number of characters it can handle, which could lead to Memory Exhaustion. In `lib/parse.js,` if a malicious user sends \"imbalanced braces\" as input, the parsing will enter a loop, which will cause the program to start allocating heap memory without freeing it at any moment of the loop. Eventually, the JavaScript heap limit is reached, and the program will crash.",
                "markdown": "**Vulnerability CVE-2024-4068**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|braces|3.0.3|[CVE-2024-4068](https://avd.aquasec.com/nvd/cve-2024-4068)|\n\nThe NPM package `braces`, versions prior to 3.0.3, fails to limit the number of characters it can handle, which could lead to Memory Exhaustion. In `lib/parse.js,` if a malicious user sends \"imbalanced braces\" as input, the parsing will enter a loop, which will cause the program to start allocating heap memory without freeing it at any moment of the loop. Eventually, the JavaScript heap limit is reached, and the program will crash."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2020-7610",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "bson: Deserialization of Untrusted Data could result in Code injection or Excessive CPU load"
              },
              "fullDescription": {
                "text": "All versions of bson before 1.1.4 are vulnerable to Deserialization of Untrusted Data. The package will ignore an unknown value for an object\u0026#39;s _bsotype, leading to cases where an object is serialized as a document rather than the intended BSON type."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-7610",
              "help": {
                "text": "Vulnerability CVE-2020-7610\nSeverity: CRITICAL\nPackage: bson\nFixed Version: 1.1.4\nLink: [CVE-2020-7610](https://avd.aquasec.com/nvd/cve-2020-7610)\nAll versions of bson before 1.1.4 are vulnerable to Deserialization of Untrusted Data. The package will ignore an unknown value for an object's _bsotype, leading to cases where an object is serialized as a document rather than the intended BSON type.",
                "markdown": "**Vulnerability CVE-2020-7610**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|bson|1.1.4|[CVE-2020-7610](https://avd.aquasec.com/nvd/cve-2020-7610)|\n\nAll versions of bson before 1.1.4 are vulnerable to Deserialization of Untrusted Data. The package will ignore an unknown value for an object's _bsotype, leading to cases where an object is serialized as a document rather than the intended BSON type."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2019-2391",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Incorrect parsing of certain JSON input may result in js-bson not corr ..."
              },
              "fullDescription": {
                "text": "Incorrect parsing of certain JSON input may result in js-bson not correctly serializing BSON. This may cause unexpected application behaviour including data disclosure. This issue affects: MongoDB Inc. js-bson library version 1.1.3 and prior to.\n\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2019-2391",
              "help": {
                "text": "Vulnerability CVE-2019-2391\nSeverity: MEDIUM\nPackage: bson\nFixed Version: 1.1.4\nLink: [CVE-2019-2391](https://avd.aquasec.com/nvd/cve-2019-2391)\nIncorrect parsing of certain JSON input may result in js-bson not correctly serializing BSON. This may cause unexpected application behaviour including data disclosure. This issue affects: MongoDB Inc. js-bson library version 1.1.3 and prior to.\n\n",
                "markdown": "**Vulnerability CVE-2019-2391**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|bson|1.1.4|[CVE-2019-2391](https://avd.aquasec.com/nvd/cve-2019-2391)|\n\nIncorrect parsing of certain JSON input may result in js-bson not correctly serializing BSON. This may cause unexpected application behaviour including data disclosure. This issue affects: MongoDB Inc. js-bson library version 1.1.3 and prior to.\n\n"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.4",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-47764",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "cookie: cookie accepts cookie name, path, and domain with out of bounds characters"
              },
              "fullDescription": {
                "text": "cookie is a basic HTTP cookie parser and serializer for HTTP servers. The cookie name could be used to set other fields of the cookie, resulting in an unexpected cookie value. A similar escape can be used for path and domain, which could be abused to alter other fields of the cookie. Upgrade to 0.7.0, which updates the validation for name, path, and domain."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-47764",
              "help": {
                "text": "Vulnerability CVE-2024-47764\nSeverity: LOW\nPackage: cookie\nFixed Version: 0.7.0\nLink: [CVE-2024-47764](https://avd.aquasec.com/nvd/cve-2024-47764)\ncookie is a basic HTTP cookie parser and serializer for HTTP servers. The cookie name could be used to set other fields of the cookie, resulting in an unexpected cookie value. A similar escape can be used for path and domain, which could be abused to alter other fields of the cookie. Upgrade to 0.7.0, which updates the validation for name, path, and domain.",
                "markdown": "**Vulnerability CVE-2024-47764**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|cookie|0.7.0|[CVE-2024-47764](https://avd.aquasec.com/nvd/cve-2024-47764)|\n\ncookie is a basic HTTP cookie parser and serializer for HTTP servers. The cookie name could be used to set other fields of the cookie, resulting in an unexpected cookie value. A similar escape can be used for path and domain, which could be abused to alter other fields of the cookie. Upgrade to 0.7.0, which updates the validation for name, path, and domain."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2017-20165",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "A vulnerability classified as problematic has been found in debug-js d ..."
              },
              "fullDescription": {
                "text": "A vulnerability classified as problematic has been found in debug-js debug up to 3.0.x. This affects the function useColors of the file src/node.js. The manipulation of the argument str leads to inefficient regular expression complexity. Upgrading to version 3.1.0 is able to address this issue. The identifier of the patch is c38a0166c266a679c8de012d4eaccec3f944e685. It is recommended to upgrade the affected component. The identifier VDB-217665 was assigned to this vulnerability."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2017-20165",
              "help": {
                "text": "Vulnerability CVE-2017-20165\nSeverity: HIGH\nPackage: debug\nFixed Version: 3.1.0, 2.6.9\nLink: [CVE-2017-20165](https://avd.aquasec.com/nvd/cve-2017-20165)\nA vulnerability classified as problematic has been found in debug-js debug up to 3.0.x. This affects the function useColors of the file src/node.js. The manipulation of the argument str leads to inefficient regular expression complexity. Upgrading to version 3.1.0 is able to address this issue. The identifier of the patch is c38a0166c266a679c8de012d4eaccec3f944e685. It is recommended to upgrade the affected component. The identifier VDB-217665 was assigned to this vulnerability.",
                "markdown": "**Vulnerability CVE-2017-20165**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|debug|3.1.0, 2.6.9|[CVE-2017-20165](https://avd.aquasec.com/nvd/cve-2017-20165)|\n\nA vulnerability classified as problematic has been found in debug-js debug up to 3.0.x. This affects the function useColors of the file src/node.js. The manipulation of the argument str leads to inefficient regular expression complexity. Upgrading to version 3.1.0 is able to address this issue. The identifier of the patch is c38a0166c266a679c8de012d4eaccec3f944e685. It is recommended to upgrade the affected component. The identifier VDB-217665 was assigned to this vulnerability."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2017-16137",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "nodejs-debug: Regular expression Denial of Service"
              },
              "fullDescription": {
                "text": "The debug module is vulnerable to regular expression denial of service when untrusted user input is passed into the o formatter. It takes around 50k characters to block for 2 seconds making this a low severity issue."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2017-16137",
              "help": {
                "text": "Vulnerability CVE-2017-16137\nSeverity: LOW\nPackage: debug\nFixed Version: 2.6.9, 3.1.0, 3.2.7, 4.3.1\nLink: [CVE-2017-16137](https://avd.aquasec.com/nvd/cve-2017-16137)\nThe debug module is vulnerable to regular expression denial of service when untrusted user input is passed into the o formatter. It takes around 50k characters to block for 2 seconds making this a low severity issue.",
                "markdown": "**Vulnerability CVE-2017-16137**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|debug|2.6.9, 3.1.0, 3.2.7, 4.3.1|[CVE-2017-16137](https://avd.aquasec.com/nvd/cve-2017-16137)|\n\nThe debug module is vulnerable to regular expression denial of service when untrusted user input is passed into the o formatter. It takes around 50k characters to block for 2 seconds making this a low severity issue."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "3.7",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2022-38900",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "decode-uri-component: improper input validation resulting in DoS"
              },
              "fullDescription": {
                "text": "decode-uri-component 0.2.0 is vulnerable to Improper Input Validation resulting in DoS."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-38900",
              "help": {
                "text": "Vulnerability CVE-2022-38900\nSeverity: HIGH\nPackage: decode-uri-component\nFixed Version: 0.2.1\nLink: [CVE-2022-38900](https://avd.aquasec.com/nvd/cve-2022-38900)\ndecode-uri-component 0.2.0 is vulnerable to Improper Input Validation resulting in DoS.",
                "markdown": "**Vulnerability CVE-2022-38900**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|decode-uri-component|0.2.1|[CVE-2022-38900](https://avd.aquasec.com/nvd/cve-2022-38900)|\n\ndecode-uri-component 0.2.0 is vulnerable to Improper Input Validation resulting in DoS."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-29041",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "express: cause malformed URLs to be evaluated"
              },
              "fullDescription": {
                "text": "Express.js minimalist web framework for node. Versions of Express.js prior to 4.19.0 and all pre-release alpha and beta versions of 5.0 are affected by an open redirect vulnerability using malformed URLs. When a user of Express performs a redirect using a user-provided URL Express performs an encode [using `encodeurl`](https://github.com/pillarjs/encodeurl) on the contents before passing it to the `location` header. This can cause malformed URLs to be evaluated in unexpected ways by common redirect allow list implementations in Express applications, leading to an Open Redirect via bypass of a properly implemented allow list. The main method impacted is `res.location()` but this is also called from within `res.redirect()`. The vulnerability is fixed in 4.19.2 and 5.0.0-beta.3."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-29041",
              "help": {
                "text": "Vulnerability CVE-2024-29041\nSeverity: MEDIUM\nPackage: express\nFixed Version: 4.19.2, 5.0.0-beta.3\nLink: [CVE-2024-29041](https://avd.aquasec.com/nvd/cve-2024-29041)\nExpress.js minimalist web framework for node. Versions of Express.js prior to 4.19.0 and all pre-release alpha and beta versions of 5.0 are affected by an open redirect vulnerability using malformed URLs. When a user of Express performs a redirect using a user-provided URL Express performs an encode [using `encodeurl`](https://github.com/pillarjs/encodeurl) on the contents before passing it to the `location` header. This can cause malformed URLs to be evaluated in unexpected ways by common redirect allow list implementations in Express applications, leading to an Open Redirect via bypass of a properly implemented allow list. The main method impacted is `res.location()` but this is also called from within `res.redirect()`. The vulnerability is fixed in 4.19.2 and 5.0.0-beta.3.",
                "markdown": "**Vulnerability CVE-2024-29041**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|express|4.19.2, 5.0.0-beta.3|[CVE-2024-29041](https://avd.aquasec.com/nvd/cve-2024-29041)|\n\nExpress.js minimalist web framework for node. Versions of Express.js prior to 4.19.0 and all pre-release alpha and beta versions of 5.0 are affected by an open redirect vulnerability using malformed URLs. When a user of Express performs a redirect using a user-provided URL Express performs an encode [using `encodeurl`](https://github.com/pillarjs/encodeurl) on the contents before passing it to the `location` header. This can cause malformed URLs to be evaluated in unexpected ways by common redirect allow list implementations in Express applications, leading to an Open Redirect via bypass of a properly implemented allow list. The main method impacted is `res.location()` but this is also called from within `res.redirect()`. The vulnerability is fixed in 4.19.2 and 5.0.0-beta.3."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-43796",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "express: Improper Input Handling in Express Redirects"
              },
              "fullDescription": {
                "text": "Express.js minimalist web framework for node. In express \u0026lt; 4.20.0, passing untrusted user input - even after sanitizing it - to response.redirect() may execute untrusted code. This issue is patched in express 4.20.0."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-43796",
              "help": {
                "text": "Vulnerability CVE-2024-43796\nSeverity: LOW\nPackage: express\nFixed Version: 4.20.0, 5.0.0\nLink: [CVE-2024-43796](https://avd.aquasec.com/nvd/cve-2024-43796)\nExpress.js minimalist web framework for node. In express \u003c 4.20.0, passing untrusted user input - even after sanitizing it - to response.redirect() may execute untrusted code. This issue is patched in express 4.20.0.",
                "markdown": "**Vulnerability CVE-2024-43796**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|express|4.20.0, 5.0.0|[CVE-2024-43796](https://avd.aquasec.com/nvd/cve-2024-43796)|\n\nExpress.js minimalist web framework for node. In express \u003c 4.20.0, passing untrusted user input - even after sanitizing it - to response.redirect() may execute untrusted code. This issue is patched in express 4.20.0."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2023-45311",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Code injection in fsevents"
              },
              "fullDescription": {
                "text": "fsevents before 1.2.11 depends on the https://fsevents-binaries.s3-us-west-2.amazonaws.com URL, which might allow an adversary to execute arbitrary code if any JavaScript project (that depends on fsevents) distributes code that was obtained from that URL at a time when it was controlled by an adversary. NOTE: some sources feel that this means that no version is affected any longer, because the URL is not controlled by an adversary."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-45311",
              "help": {
                "text": "Vulnerability CVE-2023-45311\nSeverity: CRITICAL\nPackage: fsevents\nFixed Version: 1.2.11\nLink: [CVE-2023-45311](https://avd.aquasec.com/nvd/cve-2023-45311)\nfsevents before 1.2.11 depends on the https://fsevents-binaries.s3-us-west-2.amazonaws.com URL, which might allow an adversary to execute arbitrary code if any JavaScript project (that depends on fsevents) distributes code that was obtained from that URL at a time when it was controlled by an adversary. NOTE: some sources feel that this means that no version is affected any longer, because the URL is not controlled by an adversary.",
                "markdown": "**Vulnerability CVE-2023-45311**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|fsevents|1.2.11|[CVE-2023-45311](https://avd.aquasec.com/nvd/cve-2023-45311)|\n\nfsevents before 1.2.11 depends on the https://fsevents-binaries.s3-us-west-2.amazonaws.com URL, which might allow an adversary to execute arbitrary code if any JavaScript project (that depends on fsevents) distributes code that was obtained from that URL at a time when it was controlled by an adversary. NOTE: some sources feel that this means that no version is affected any longer, because the URL is not controlled by an adversary."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "GHSA-c3m8-x3cg-qm2c",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Configuration Override in helmet-csp"
              },
              "fullDescription": {
                "text": "Versions of `helmet-csp` before to 2.9.1 are vulnerable to a Configuration Override affecting the application\u0026#39;s Content Security Policy (CSP). The package\u0026#39;s browser sniffing for Firefox deletes the `default-src` CSP policy, which is the fallback policy. This allows an attacker to remove an application\u0026#39;s default CSP, possibly rendering the application vulnerable to Cross-Site Scripting.\n\n\n## Recommendation\n\nUpgrade to version 2.9.1 or later. Setting the `browserSniff` configuration to `false` in vulnerable versions also mitigates the issue."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://github.com/advisories/GHSA-c3m8-x3cg-qm2c",
              "help": {
                "text": "Vulnerability GHSA-c3m8-x3cg-qm2c\nSeverity: MEDIUM\nPackage: helmet-csp\nFixed Version: 2.9.1\nLink: [GHSA-c3m8-x3cg-qm2c](https://github.com/advisories/GHSA-c3m8-x3cg-qm2c)\nVersions of `helmet-csp` before to 2.9.1 are vulnerable to a Configuration Override affecting the application's Content Security Policy (CSP). The package's browser sniffing for Firefox deletes the `default-src` CSP policy, which is the fallback policy. This allows an attacker to remove an application's default CSP, possibly rendering the application vulnerable to Cross-Site Scripting.\n\n\n## Recommendation\n\nUpgrade to version 2.9.1 or later. Setting the `browserSniff` configuration to `false` in vulnerable versions also mitigates the issue.",
                "markdown": "**Vulnerability GHSA-c3m8-x3cg-qm2c**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|helmet-csp|2.9.1|[GHSA-c3m8-x3cg-qm2c](https://github.com/advisories/GHSA-c3m8-x3cg-qm2c)|\n\nVersions of `helmet-csp` before to 2.9.1 are vulnerable to a Configuration Override affecting the application's Content Security Policy (CSP). The package's browser sniffing for Firefox deletes the `default-src` CSP policy, which is the fallback policy. This allows an attacker to remove an application's default CSP, possibly rendering the application vulnerable to Cross-Site Scripting.\n\n\n## Recommendation\n\nUpgrade to version 2.9.1 or later. Setting the `browserSniff` configuration to `false` in vulnerable versions also mitigates the issue."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-3820",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "inflect vulnerable to Inefficient Regular Expression Complexity"
              },
              "fullDescription": {
                "text": "inflect is vulnerable to Inefficient Regular Expression Complexity"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-3820",
              "help": {
                "text": "Vulnerability CVE-2021-3820\nSeverity: HIGH\nPackage: i\nFixed Version: 0.3.7\nLink: [CVE-2021-3820](https://avd.aquasec.com/nvd/cve-2021-3820)\ninflect is vulnerable to Inefficient Regular Expression Complexity",
                "markdown": "**Vulnerability CVE-2021-3820**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|i|0.3.7|[CVE-2021-3820](https://avd.aquasec.com/nvd/cve-2021-3820)|\n\ninflect is vulnerable to Inefficient Regular Expression Complexity"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2020-7788",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "nodejs-ini: Prototype pollution via malicious INI file"
              },
              "fullDescription": {
                "text": "This affects the package ini before 1.3.6. If an attacker submits a malicious INI file to an application that parses it with ini.parse, they will pollute the prototype on the application. This can be exploited further depending on the context."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-7788",
              "help": {
                "text": "Vulnerability CVE-2020-7788\nSeverity: HIGH\nPackage: ini\nFixed Version: 1.3.6\nLink: [CVE-2020-7788](https://avd.aquasec.com/nvd/cve-2020-7788)\nThis affects the package ini before 1.3.6. If an attacker submits a malicious INI file to an application that parses it with ini.parse, they will pollute the prototype on the application. This can be exploited further depending on the context.",
                "markdown": "**Vulnerability CVE-2020-7788**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|ini|1.3.6|[CVE-2020-7788](https://avd.aquasec.com/nvd/cve-2020-7788)|\n\nThis affects the package ini before 1.3.6. If an attacker submits a malicious INI file to an application that parses it with ini.parse, they will pollute the prototype on the application. This can be exploited further depending on the context."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2019-20149",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "nodejs-kind-of: ctorName in index.js allows external user input to overwrite certain internal attributes"
              },
              "fullDescription": {
                "text": "ctorName in index.js in kind-of v6.0.2 allows external user input to overwrite certain internal attributes via a conflicting name, as demonstrated by \u0026#39;constructor\u0026#39;: {\u0026#39;name\u0026#39;:\u0026#39;Symbol\u0026#39;}. Hence, a crafted payload can overwrite this builtin attribute to manipulate the type detection result."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2019-20149",
              "help": {
                "text": "Vulnerability CVE-2019-20149\nSeverity: HIGH\nPackage: kind-of\nFixed Version: 6.0.3\nLink: [CVE-2019-20149](https://avd.aquasec.com/nvd/cve-2019-20149)\nctorName in index.js in kind-of v6.0.2 allows external user input to overwrite certain internal attributes via a conflicting name, as demonstrated by 'constructor': {'name':'Symbol'}. Hence, a crafted payload can overwrite this builtin attribute to manipulate the type detection result.",
                "markdown": "**Vulnerability CVE-2019-20149**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|kind-of|6.0.3|[CVE-2019-20149](https://avd.aquasec.com/nvd/cve-2019-20149)|\n\nctorName in index.js in kind-of v6.0.2 allows external user input to overwrite certain internal attributes via a conflicting name, as demonstrated by 'constructor': {'name':'Symbol'}. Hence, a crafted payload can overwrite this builtin attribute to manipulate the type detection result."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2017-16114",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "The marked module is vulnerable to a regular expression denial of serv ..."
              },
              "fullDescription": {
                "text": "The marked module is vulnerable to a regular expression denial of service. Based on the information published in the public issue, 1k characters can block for around 6 seconds."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2017-16114",
              "help": {
                "text": "Vulnerability CVE-2017-16114\nSeverity: HIGH\nPackage: marked\nFixed Version: 0.3.9\nLink: [CVE-2017-16114](https://avd.aquasec.com/nvd/cve-2017-16114)\nThe marked module is vulnerable to a regular expression denial of service. Based on the information published in the public issue, 1k characters can block for around 6 seconds.",
                "markdown": "**Vulnerability CVE-2017-16114**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|marked|0.3.9|[CVE-2017-16114](https://avd.aquasec.com/nvd/cve-2017-16114)|\n\nThe marked module is vulnerable to a regular expression denial of service. Based on the information published in the public issue, 1k characters can block for around 6 seconds."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-21680",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "marked: regular expression block.def may lead Denial of Service"
              },
              "fullDescription": {
                "text": "Marked is a markdown parser and compiler. Prior to version 4.0.10, the regular expression `block.def` may cause catastrophic backtracking against some strings and lead to a regular expression denial of service (ReDoS). Anyone who runs untrusted markdown through a vulnerable version of marked and does not use a worker with a time limit may be affected. This issue is patched in version 4.0.10. As a workaround, avoid running untrusted markdown through marked or run marked on a worker thread and set a reasonable time limit to prevent draining resources."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-21680",
              "help": {
                "text": "Vulnerability CVE-2022-21680\nSeverity: HIGH\nPackage: marked\nFixed Version: 4.0.10\nLink: [CVE-2022-21680](https://avd.aquasec.com/nvd/cve-2022-21680)\nMarked is a markdown parser and compiler. Prior to version 4.0.10, the regular expression `block.def` may cause catastrophic backtracking against some strings and lead to a regular expression denial of service (ReDoS). Anyone who runs untrusted markdown through a vulnerable version of marked and does not use a worker with a time limit may be affected. This issue is patched in version 4.0.10. As a workaround, avoid running untrusted markdown through marked or run marked on a worker thread and set a reasonable time limit to prevent draining resources.",
                "markdown": "**Vulnerability CVE-2022-21680**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|marked|4.0.10|[CVE-2022-21680](https://avd.aquasec.com/nvd/cve-2022-21680)|\n\nMarked is a markdown parser and compiler. Prior to version 4.0.10, the regular expression `block.def` may cause catastrophic backtracking against some strings and lead to a regular expression denial of service (ReDoS). Anyone who runs untrusted markdown through a vulnerable version of marked and does not use a worker with a time limit may be affected. This issue is patched in version 4.0.10. As a workaround, avoid running untrusted markdown through marked or run marked on a worker thread and set a reasonable time limit to prevent draining resources."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-21681",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "marked: regular expression inline.reflinkSearch may lead Denial of Service"
              },
              "fullDescription": {
                "text": "Marked is a markdown parser and compiler. Prior to version 4.0.10, the regular expression `inline.reflinkSearch` may cause catastrophic backtracking against some strings and lead to a denial of service (DoS). Anyone who runs untrusted markdown through a vulnerable version of marked and does not use a worker with a time limit may be affected. This issue is patched in version 4.0.10. As a workaround, avoid running untrusted markdown through marked or run marked on a worker thread and set a reasonable time limit to prevent draining resources."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-21681",
              "help": {
                "text": "Vulnerability CVE-2022-21681\nSeverity: HIGH\nPackage: marked\nFixed Version: 4.0.10\nLink: [CVE-2022-21681](https://avd.aquasec.com/nvd/cve-2022-21681)\nMarked is a markdown parser and compiler. Prior to version 4.0.10, the regular expression `inline.reflinkSearch` may cause catastrophic backtracking against some strings and lead to a denial of service (DoS). Anyone who runs untrusted markdown through a vulnerable version of marked and does not use a worker with a time limit may be affected. This issue is patched in version 4.0.10. As a workaround, avoid running untrusted markdown through marked or run marked on a worker thread and set a reasonable time limit to prevent draining resources.",
                "markdown": "**Vulnerability CVE-2022-21681**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|marked|4.0.10|[CVE-2022-21681](https://avd.aquasec.com/nvd/cve-2022-21681)|\n\nMarked is a markdown parser and compiler. Prior to version 4.0.10, the regular expression `inline.reflinkSearch` may cause catastrophic backtracking against some strings and lead to a denial of service (DoS). Anyone who runs untrusted markdown through a vulnerable version of marked and does not use a worker with a time limit may be affected. This issue is patched in version 4.0.10. As a workaround, avoid running untrusted markdown through marked or run marked on a worker thread and set a reasonable time limit to prevent draining resources."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2016-10531",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "marked is an application that is meant to parse and compile markdown.  ..."
              },
              "fullDescription": {
                "text": "marked is an application that is meant to parse and compile markdown. Due to the way that marked 0.3.5 and earlier parses input, specifically HTML entities, it\u0026#39;s possible to bypass marked\u0026#39;s content injection protection (`sanitize: true`) to inject a `javascript:` URL. This flaw exists because `\u0026amp;#xNNanything;` gets parsed to what it could and leaves the rest behind, resulting in just `anything;` being left."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2016-10531",
              "help": {
                "text": "Vulnerability CVE-2016-10531\nSeverity: MEDIUM\nPackage: marked\nFixed Version: 0.3.6\nLink: [CVE-2016-10531](https://avd.aquasec.com/nvd/cve-2016-10531)\nmarked is an application that is meant to parse and compile markdown. Due to the way that marked 0.3.5 and earlier parses input, specifically HTML entities, it's possible to bypass marked's content injection protection (`sanitize: true`) to inject a `javascript:` URL. This flaw exists because `\u0026#xNNanything;` gets parsed to what it could and leaves the rest behind, resulting in just `anything;` being left.",
                "markdown": "**Vulnerability CVE-2016-10531**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|marked|0.3.6|[CVE-2016-10531](https://avd.aquasec.com/nvd/cve-2016-10531)|\n\nmarked is an application that is meant to parse and compile markdown. Due to the way that marked 0.3.5 and earlier parses input, specifically HTML entities, it's possible to bypass marked's content injection protection (`sanitize: true`) to inject a `javascript:` URL. This flaw exists because `\u0026#xNNanything;` gets parsed to what it could and leaves the rest behind, resulting in just `anything;` being left."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2017-1000427",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "marked version 0.3.6 and earlier is vulnerable to an XSS attack in the ..."
              },
              "fullDescription": {
                "text": "marked version 0.3.6 and earlier is vulnerable to an XSS attack in the data: URI parser."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2017-1000427",
              "help": {
                "text": "Vulnerability CVE-2017-1000427\nSeverity: MEDIUM\nPackage: marked\nFixed Version: 0.3.7\nLink: [CVE-2017-1000427](https://avd.aquasec.com/nvd/cve-2017-1000427)\nmarked version 0.3.6 and earlier is vulnerable to an XSS attack in the data: URI parser.",
                "markdown": "**Vulnerability CVE-2017-1000427**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|marked|0.3.7|[CVE-2017-1000427](https://avd.aquasec.com/nvd/cve-2017-1000427)|\n\nmarked version 0.3.6 and earlier is vulnerable to an XSS attack in the data: URI parser."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "NSWG-ECO-101",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Sanitization bypass using HTML Entities"
              },
              "fullDescription": {
                "text": "marked is an application that is meant to parse and compile markdown.\n\nDue to the way that marked parses input, specifically HTML entities, it\u0026#39;s possible to bypass marked\u0026#39;s content injection protection (`sanitize: true`) to inject a `javascript:` URL.\n\nThis flaw exists because `\u0026amp;#xNNanything;` gets parsed to what it could and leaves the rest behind, resulting in just `anything;` being left. \n\nFor example:\n\nIf a malicious user could provide this input to the application `javascript\u0026amp;#x58document;alert\u0026amp;#40;1\u0026amp;#41;` resulting in a valid link, that when a user clicked it would execute `alert(1)`."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "text": "Vulnerability NSWG-ECO-101\nSeverity: MEDIUM\nPackage: marked\nFixed Version: \u003e=0.3.6\nLink: [NSWG-ECO-101]()\nmarked is an application that is meant to parse and compile markdown.\n\nDue to the way that marked parses input, specifically HTML entities, it's possible to bypass marked's content injection protection (`sanitize: true`) to inject a `javascript:` URL.\n\nThis flaw exists because `\u0026#xNNanything;` gets parsed to what it could and leaves the rest behind, resulting in just `anything;` being left. \n\nFor example:\n\nIf a malicious user could provide this input to the application `javascript\u0026#x58document;alert\u0026#40;1\u0026#41;` resulting in a valid link, that when a user clicked it would execute `alert(1)`.",
                "markdown": "**Vulnerability NSWG-ECO-101**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|marked|\u003e=0.3.6|[NSWG-ECO-101]()|\n\nmarked is an application that is meant to parse and compile markdown.\n\nDue to the way that marked parses input, specifically HTML entities, it's possible to bypass marked's content injection protection (`sanitize: true`) to inject a `javascript:` URL.\n\nThis flaw exists because `\u0026#xNNanything;` gets parsed to what it could and leaves the rest behind, resulting in just `anything;` being left. \n\nFor example:\n\nIf a malicious user could provide this input to the application `javascript\u0026#x58document;alert\u0026#40;1\u0026#41;` resulting in a valid link, that when a user clicked it would execute `alert(1)`."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-4067",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "micromatch: vulnerable to Regular Expression Denial of Service"
              },
              "fullDescription": {
                "text": "The NPM package `micromatch` prior to 4.0.8 is vulnerable to Regular Expression Denial of Service (ReDoS). The vulnerability occurs in `micromatch.braces()` in `index.js` because the pattern `.*` will greedily match anything. By passing a malicious payload, the pattern matching will keep backtracking to the input while it doesn\u0026#39;t find the closing bracket. As the input size increases, the consumption time will also increase until it causes the application to hang or slow down. There was a merged fix but further testing shows the issue persists. This issue should be mitigated by using a safe pattern that won\u0026#39;t start backtracking the regular expression due to greedy matching. This issue was fixed in version 4.0.8."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-4067",
              "help": {
                "text": "Vulnerability CVE-2024-4067\nSeverity: MEDIUM\nPackage: micromatch\nFixed Version: 4.0.8\nLink: [CVE-2024-4067](https://avd.aquasec.com/nvd/cve-2024-4067)\nThe NPM package `micromatch` prior to 4.0.8 is vulnerable to Regular Expression Denial of Service (ReDoS). The vulnerability occurs in `micromatch.braces()` in `index.js` because the pattern `.*` will greedily match anything. By passing a malicious payload, the pattern matching will keep backtracking to the input while it doesn't find the closing bracket. As the input size increases, the consumption time will also increase until it causes the application to hang or slow down. There was a merged fix but further testing shows the issue persists. This issue should be mitigated by using a safe pattern that won't start backtracking the regular expression due to greedy matching. This issue was fixed in version 4.0.8.",
                "markdown": "**Vulnerability CVE-2024-4067**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|micromatch|4.0.8|[CVE-2024-4067](https://avd.aquasec.com/nvd/cve-2024-4067)|\n\nThe NPM package `micromatch` prior to 4.0.8 is vulnerable to Regular Expression Denial of Service (ReDoS). The vulnerability occurs in `micromatch.braces()` in `index.js` because the pattern `.*` will greedily match anything. By passing a malicious payload, the pattern matching will keep backtracking to the input while it doesn't find the closing bracket. As the input size increases, the consumption time will also increase until it causes the application to hang or slow down. There was a merged fix but further testing shows the issue persists. This issue should be mitigated by using a safe pattern that won't start backtracking the regular expression due to greedy matching. This issue was fixed in version 4.0.8."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-3517",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "nodejs-minimatch: ReDoS via the braceExpand function"
              },
              "fullDescription": {
                "text": "A vulnerability was found in the minimatch package. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the braceExpand function with specific arguments, resulting in a Denial of Service."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-3517",
              "help": {
                "text": "Vulnerability CVE-2022-3517\nSeverity: HIGH\nPackage: minimatch\nFixed Version: 3.0.5\nLink: [CVE-2022-3517](https://avd.aquasec.com/nvd/cve-2022-3517)\nA vulnerability was found in the minimatch package. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the braceExpand function with specific arguments, resulting in a Denial of Service.",
                "markdown": "**Vulnerability CVE-2022-3517**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|minimatch|3.0.5|[CVE-2022-3517](https://avd.aquasec.com/nvd/cve-2022-3517)|\n\nA vulnerability was found in the minimatch package. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the braceExpand function with specific arguments, resulting in a Denial of Service."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-44906",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "minimist: prototype pollution"
              },
              "fullDescription": {
                "text": "Minimist \u0026lt;=1.2.5 is vulnerable to Prototype Pollution via file index.js, function setKey() (lines 69-95)."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-44906",
              "help": {
                "text": "Vulnerability CVE-2021-44906\nSeverity: CRITICAL\nPackage: minimist\nFixed Version: 1.2.6, 0.2.4\nLink: [CVE-2021-44906](https://avd.aquasec.com/nvd/cve-2021-44906)\nMinimist \u003c=1.2.5 is vulnerable to Prototype Pollution via file index.js, function setKey() (lines 69-95).",
                "markdown": "**Vulnerability CVE-2021-44906**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|minimist|1.2.6, 0.2.4|[CVE-2021-44906](https://avd.aquasec.com/nvd/cve-2021-44906)|\n\nMinimist \u003c=1.2.5 is vulnerable to Prototype Pollution via file index.js, function setKey() (lines 69-95)."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2020-7598",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "nodejs-minimist: prototype pollution allows adding or modifying properties of Object.prototype using a constructor or __proto__ payload"
              },
              "fullDescription": {
                "text": "minimist before 1.2.2 could be tricked into adding or modifying properties of Object.prototype using a \u0026#34;constructor\u0026#34; or \u0026#34;__proto__\u0026#34; payload."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-7598",
              "help": {
                "text": "Vulnerability CVE-2020-7598\nSeverity: MEDIUM\nPackage: minimist\nFixed Version: 0.2.1, 1.2.3\nLink: [CVE-2020-7598](https://avd.aquasec.com/nvd/cve-2020-7598)\nminimist before 1.2.2 could be tricked into adding or modifying properties of Object.prototype using a \"constructor\" or \"__proto__\" payload.",
                "markdown": "**Vulnerability CVE-2020-7598**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|minimist|0.2.1, 1.2.3|[CVE-2020-7598](https://avd.aquasec.com/nvd/cve-2020-7598)|\n\nminimist before 1.2.2 could be tricked into adding or modifying properties of Object.prototype using a \"constructor\" or \"__proto__\" payload."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.6",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2019-10746",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "nodejs-mixin-deep: prototype pollution in function mixin-deep"
              },
              "fullDescription": {
                "text": "mixin-deep is vulnerable to Prototype Pollution in versions before 1.3.2 and version 2.0.0. The function mixin-deep could be tricked into adding or modifying properties of Object.prototype using a constructor payload."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2019-10746",
              "help": {
                "text": "Vulnerability CVE-2019-10746\nSeverity: CRITICAL\nPackage: mixin-deep\nFixed Version: 1.3.2, 2.0.1\nLink: [CVE-2019-10746](https://avd.aquasec.com/nvd/cve-2019-10746)\nmixin-deep is vulnerable to Prototype Pollution in versions before 1.3.2 and version 2.0.0. The function mixin-deep could be tricked into adding or modifying properties of Object.prototype using a constructor payload.",
                "markdown": "**Vulnerability CVE-2019-10746**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|mixin-deep|1.3.2, 2.0.1|[CVE-2019-10746](https://avd.aquasec.com/nvd/cve-2019-10746)|\n\nmixin-deep is vulnerable to Prototype Pollution in versions before 1.3.2 and version 2.0.0. The function mixin-deep could be tricked into adding or modifying properties of Object.prototype using a constructor payload."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "GHSA-mh5c-679w-hh4r",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Denial of Service in mongodb"
              },
              "fullDescription": {
                "text": "Versions of `mongodb` prior to 3.1.13 are vulnerable to Denial of Service. The package fails to properly catch an exception when a collection name is invalid and the DB does not exist, crashing the application.\n\n\n## Recommendation\n\nUpgrade to version 3.1.13 or later."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://github.com/advisories/GHSA-mh5c-679w-hh4r",
              "help": {
                "text": "Vulnerability GHSA-mh5c-679w-hh4r\nSeverity: HIGH\nPackage: mongodb\nFixed Version: 3.1.13\nLink: [GHSA-mh5c-679w-hh4r](https://github.com/advisories/GHSA-mh5c-679w-hh4r)\nVersions of `mongodb` prior to 3.1.13 are vulnerable to Denial of Service. The package fails to properly catch an exception when a collection name is invalid and the DB does not exist, crashing the application.\n\n\n## Recommendation\n\nUpgrade to version 3.1.13 or later.",
                "markdown": "**Vulnerability GHSA-mh5c-679w-hh4r**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|mongodb|3.1.13|[GHSA-mh5c-679w-hh4r](https://github.com/advisories/GHSA-mh5c-679w-hh4r)|\n\nVersions of `mongodb` prior to 3.1.13 are vulnerable to Denial of Service. The package fails to properly catch an exception when a collection name is invalid and the DB does not exist, crashing the application.\n\n\n## Recommendation\n\nUpgrade to version 3.1.13 or later."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2017-20162",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Vercel ms Inefficient Regular Expression Complexity vulnerability"
              },
              "fullDescription": {
                "text": "A vulnerability, which was classified as problematic, has been found in vercel ms up to 1.x. This issue affects the function parse of the file index.js. The manipulation of the argument str leads to inefficient regular expression complexity. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. Upgrading to version 2.0.0 is able to address this issue. The patch is named caae2988ba2a37765d055c4eee63d383320ee662. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-217451."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2017-20162",
              "help": {
                "text": "Vulnerability CVE-2017-20162\nSeverity: MEDIUM\nPackage: ms\nFixed Version: 2.0.0\nLink: [CVE-2017-20162](https://avd.aquasec.com/nvd/cve-2017-20162)\nA vulnerability, which was classified as problematic, has been found in vercel ms up to 1.x. This issue affects the function parse of the file index.js. The manipulation of the argument str leads to inefficient regular expression complexity. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. Upgrading to version 2.0.0 is able to address this issue. The patch is named caae2988ba2a37765d055c4eee63d383320ee662. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-217451.",
                "markdown": "**Vulnerability CVE-2017-20162**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|ms|2.0.0|[CVE-2017-20162](https://avd.aquasec.com/nvd/cve-2017-20162)|\n\nA vulnerability, which was classified as problematic, has been found in vercel ms up to 1.x. This issue affects the function parse of the file index.js. The manipulation of the argument str leads to inefficient regular expression complexity. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. Upgrading to version 2.0.0 is able to address this issue. The patch is named caae2988ba2a37765d055c4eee63d383320ee662. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-217451."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2022-21803",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "nconf: Prototype pollution in memory store"
              },
              "fullDescription": {
                "text": "This affects the package nconf before 0.11.4. When using the memory engine, it is possible to store a nested JSON representation of the configuration. The .set() function, that is responsible for setting the configuration properties, is vulnerable to Prototype Pollution. By providing a crafted property, it is possible to modify the properties on the Object.prototype."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-21803",
              "help": {
                "text": "Vulnerability CVE-2022-21803\nSeverity: HIGH\nPackage: nconf\nFixed Version: 0.11.4\nLink: [CVE-2022-21803](https://avd.aquasec.com/nvd/cve-2022-21803)\nThis affects the package nconf before 0.11.4. When using the memory engine, it is possible to store a nested JSON representation of the configuration. The .set() function, that is responsible for setting the configuration properties, is vulnerable to Prototype Pollution. By providing a crafted property, it is possible to modify the properties on the Object.prototype.",
                "markdown": "**Vulnerability CVE-2022-21803**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|nconf|0.11.4|[CVE-2022-21803](https://avd.aquasec.com/nvd/cve-2022-21803)|\n\nThis affects the package nconf before 0.11.4. When using the memory engine, it is possible to store a nested JSON representation of the configuration. The .set() function, that is responsible for setting the configuration properties, is vulnerable to Prototype Pollution. By providing a crafted property, it is possible to modify the properties on the Object.prototype."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-45296",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "path-to-regexp: Backtracking regular expressions cause ReDoS"
              },
              "fullDescription": {
                "text": "path-to-regexp turns path strings into a regular expressions. In certain cases, path-to-regexp will output a regular expression that can be exploited to cause poor performance. Because JavaScript is single threaded and regex matching runs on the main thread, poor performance will block the event loop and lead to a DoS. The bad regular expression is generated any time you have two parameters within a single segment, separated by something that is not a period (.). For users of 0.1, upgrade to 0.1.10. All other users should upgrade to 8.0.0."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-45296",
              "help": {
                "text": "Vulnerability CVE-2024-45296\nSeverity: HIGH\nPackage: path-to-regexp\nFixed Version: 1.9.0, 0.1.10, 8.0.0, 3.3.0, 6.3.0\nLink: [CVE-2024-45296](https://avd.aquasec.com/nvd/cve-2024-45296)\npath-to-regexp turns path strings into a regular expressions. In certain cases, path-to-regexp will output a regular expression that can be exploited to cause poor performance. Because JavaScript is single threaded and regex matching runs on the main thread, poor performance will block the event loop and lead to a DoS. The bad regular expression is generated any time you have two parameters within a single segment, separated by something that is not a period (.). For users of 0.1, upgrade to 0.1.10. All other users should upgrade to 8.0.0.",
                "markdown": "**Vulnerability CVE-2024-45296**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|path-to-regexp|1.9.0, 0.1.10, 8.0.0, 3.3.0, 6.3.0|[CVE-2024-45296](https://avd.aquasec.com/nvd/cve-2024-45296)|\n\npath-to-regexp turns path strings into a regular expressions. In certain cases, path-to-regexp will output a regular expression that can be exploited to cause poor performance. Because JavaScript is single threaded and regex matching runs on the main thread, poor performance will block the event loop and lead to a DoS. The bad regular expression is generated any time you have two parameters within a single segment, separated by something that is not a period (.). For users of 0.1, upgrade to 0.1.10. All other users should upgrade to 8.0.0."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-52798",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "path-to-regexp: path-to-regexp Unpatched `path-to-regexp` ReDoS in 0.1.x"
              },
              "fullDescription": {
                "text": "path-to-regexp turns path strings into a regular expressions. In certain cases, path-to-regexp will output a regular expression that can be exploited to cause poor performance. The regular expression that is vulnerable to backtracking can be generated in the 0.1.x release of path-to-regexp. Upgrade to 0.1.12. This vulnerability exists because of an incomplete fix for CVE-2024-45296."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-52798",
              "help": {
                "text": "Vulnerability CVE-2024-52798\nSeverity: HIGH\nPackage: path-to-regexp\nFixed Version: 0.1.12\nLink: [CVE-2024-52798](https://avd.aquasec.com/nvd/cve-2024-52798)\npath-to-regexp turns path strings into a regular expressions. In certain cases, path-to-regexp will output a regular expression that can be exploited to cause poor performance. The regular expression that is vulnerable to backtracking can be generated in the 0.1.x release of path-to-regexp. Upgrade to 0.1.12. This vulnerability exists because of an incomplete fix for CVE-2024-45296.",
                "markdown": "**Vulnerability CVE-2024-52798**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|path-to-regexp|0.1.12|[CVE-2024-52798](https://avd.aquasec.com/nvd/cve-2024-52798)|\n\npath-to-regexp turns path strings into a regular expressions. In certain cases, path-to-regexp will output a regular expression that can be exploited to cause poor performance. The regular expression that is vulnerable to backtracking can be generated in the 0.1.x release of path-to-regexp. Upgrade to 0.1.12. This vulnerability exists because of an incomplete fix for CVE-2024-45296."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-24999",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "express: \u0026#34;qs\u0026#34; prototype poisoning causes the hang of the node process"
              },
              "fullDescription": {
                "text": "qs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[__proto__]=b\u0026amp;a[__proto__]\u0026amp;a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has \u0026#34;deps: qs@6.9.7\u0026#34; in its release description, is not vulnerable)."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-24999",
              "help": {
                "text": "Vulnerability CVE-2022-24999\nSeverity: HIGH\nPackage: qs\nFixed Version: 6.10.3, 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, 6.2.4\nLink: [CVE-2022-24999](https://avd.aquasec.com/nvd/cve-2022-24999)\nqs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[__proto__]=b\u0026a[__proto__]\u0026a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has \"deps: qs@6.9.7\" in its release description, is not vulnerable).",
                "markdown": "**Vulnerability CVE-2022-24999**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|qs|6.10.3, 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, 6.2.4|[CVE-2022-24999](https://avd.aquasec.com/nvd/cve-2022-24999)|\n\nqs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[__proto__]=b\u0026a[__proto__]\u0026a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has \"deps: qs@6.9.7\" in its release description, is not vulnerable)."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2022-25883",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "nodejs-semver: Regular expression denial of service"
              },
              "fullDescription": {
                "text": "Versions of the package semver before 7.5.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.\r\r\r"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2022-25883",
              "help": {
                "text": "Vulnerability CVE-2022-25883\nSeverity: HIGH\nPackage: semver\nFixed Version: 7.5.2, 6.3.1, 5.7.2\nLink: [CVE-2022-25883](https://avd.aquasec.com/nvd/cve-2022-25883)\nVersions of the package semver before 7.5.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.\r\r\r",
                "markdown": "**Vulnerability CVE-2022-25883**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|semver|7.5.2, 6.3.1, 5.7.2|[CVE-2022-25883](https://avd.aquasec.com/nvd/cve-2022-25883)|\n\nVersions of the package semver before 7.5.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.\r\r\r"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-43799",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "send: Code Execution Vulnerability in Send Library"
              },
              "fullDescription": {
                "text": "Send is a library for streaming files from the file system as a http response. Send passes untrusted user input to SendStream.redirect() which executes untrusted code. This issue is patched in send 0.19.0."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-43799",
              "help": {
                "text": "Vulnerability CVE-2024-43799\nSeverity: LOW\nPackage: send\nFixed Version: 0.19.0\nLink: [CVE-2024-43799](https://avd.aquasec.com/nvd/cve-2024-43799)\nSend is a library for streaming files from the file system as a http response. Send passes untrusted user input to SendStream.redirect() which executes untrusted code. This issue is patched in send 0.19.0.",
                "markdown": "**Vulnerability CVE-2024-43799**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|send|0.19.0|[CVE-2024-43799](https://avd.aquasec.com/nvd/cve-2024-43799)|\n\nSend is a library for streaming files from the file system as a http response. Send passes untrusted user input to SendStream.redirect() which executes untrusted code. This issue is patched in send 0.19.0."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2024-43800",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "serve-static: Improper Sanitization in serve-static"
              },
              "fullDescription": {
                "text": "serve-static serves static files. serve-static passes untrusted user input - even after sanitizing it - to redirect() may execute untrusted code. This issue is patched in serve-static 1.16.0."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-43800",
              "help": {
                "text": "Vulnerability CVE-2024-43800\nSeverity: LOW\nPackage: serve-static\nFixed Version: 1.16.0, 2.1.0\nLink: [CVE-2024-43800](https://avd.aquasec.com/nvd/cve-2024-43800)\nserve-static serves static files. serve-static passes untrusted user input - even after sanitizing it - to redirect() may execute untrusted code. This issue is patched in serve-static 1.16.0.",
                "markdown": "**Vulnerability CVE-2024-43800**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|serve-static|1.16.0, 2.1.0|[CVE-2024-43800](https://avd.aquasec.com/nvd/cve-2024-43800)|\n\nserve-static serves static files. serve-static passes untrusted user input - even after sanitizing it - to redirect() may execute untrusted code. This issue is patched in serve-static 1.16.0."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2019-10747",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "nodejs-set-value: prototype pollution in function set-value"
              },
              "fullDescription": {
                "text": "set-value is vulnerable to Prototype Pollution in versions lower than 3.0.1. The function mixin-deep could be tricked into adding or modifying properties of Object.prototype using any of the constructor, prototype and _proto_ payloads."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2019-10747",
              "help": {
                "text": "Vulnerability CVE-2019-10747\nSeverity: CRITICAL\nPackage: set-value\nFixed Version: 2.0.1, 3.0.1\nLink: [CVE-2019-10747](https://avd.aquasec.com/nvd/cve-2019-10747)\nset-value is vulnerable to Prototype Pollution in versions lower than 3.0.1. The function mixin-deep could be tricked into adding or modifying properties of Object.prototype using any of the constructor, prototype and _proto_ payloads.",
                "markdown": "**Vulnerability CVE-2019-10747**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|set-value|2.0.1, 3.0.1|[CVE-2019-10747](https://avd.aquasec.com/nvd/cve-2019-10747)|\n\nset-value is vulnerable to Prototype Pollution in versions lower than 3.0.1. The function mixin-deep could be tricked into adding or modifying properties of Object.prototype using any of the constructor, prototype and _proto_ payloads."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2021-23440",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "nodejs-set-value: type confusion allows bypass of CVE-2019-10747"
              },
              "fullDescription": {
                "text": "This affects the package set-value before \u0026lt;2.0.1, \u0026gt;=3.0.0 \u0026lt;4.0.1. A type confusion vulnerability can lead to a bypass of CVE-2019-10747 when the user-provided keys used in the path parameter are arrays."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-23440",
              "help": {
                "text": "Vulnerability CVE-2021-23440\nSeverity: HIGH\nPackage: set-value\nFixed Version: 4.0.1, 2.0.1, 3.0.3\nLink: [CVE-2021-23440](https://avd.aquasec.com/nvd/cve-2021-23440)\nThis affects the package set-value before \u003c2.0.1, \u003e=3.0.0 \u003c4.0.1. A type confusion vulnerability can lead to a bypass of CVE-2019-10747 when the user-provided keys used in the path parameter are arrays.",
                "markdown": "**Vulnerability CVE-2021-23440**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|set-value|4.0.1, 2.0.1, 3.0.3|[CVE-2021-23440](https://avd.aquasec.com/nvd/cve-2021-23440)|\n\nThis affects the package set-value before \u003c2.0.1, \u003e=3.0.0 \u003c4.0.1. A type confusion vulnerability can lead to a bypass of CVE-2019-10747 when the user-provided keys used in the path parameter are arrays."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2023-25345",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Arbitrary local file read vulnerability during template rendering "
              },
              "fullDescription": {
                "text": "Directory traversal vulnerability in swig-templates thru 2.0.4 and swig thru 1.4.2, allows attackers to read arbitrary files via the include or extends tags."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-25345",
              "help": {
                "text": "Vulnerability CVE-2023-25345\nSeverity: HIGH\nPackage: swig\nFixed Version: \nLink: [CVE-2023-25345](https://avd.aquasec.com/nvd/cve-2023-25345)\nDirectory traversal vulnerability in swig-templates thru 2.0.4 and swig thru 1.4.2, allows attackers to read arbitrary files via the include or extends tags.",
                "markdown": "**Vulnerability CVE-2023-25345**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|swig||[CVE-2023-25345](https://avd.aquasec.com/nvd/cve-2023-25345)|\n\nDirectory traversal vulnerability in swig-templates thru 2.0.4 and swig thru 1.4.2, allows attackers to read arbitrary files via the include or extends tags."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-32803",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "nodejs-tar: Insufficient symlink protection allowing arbitrary file creation and overwrite"
              },
              "fullDescription": {
                "text": "The npm package \u0026#34;tar\u0026#34; (aka node-tar) before versions 6.1.2, 5.0.7, 4.4.15, and 3.2.3 has an arbitrary File Creation/Overwrite vulnerability via insufficient symlink protection. `node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary `stat` calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory. This order of operations resulted in the directory being created and added to the `node-tar` directory cache. When a directory is present in the directory cache, subsequent calls to mkdir for that directory are skipped. However, this is also where `node-tar` checks for symlinks occur. By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass `node-tar` symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. This issue was addressed in releases 3.2.3, 4.4.15, 5.0.7 and 6.1.2."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-32803",
              "help": {
                "text": "Vulnerability CVE-2021-32803\nSeverity: HIGH\nPackage: tar\nFixed Version: 3.2.3, 4.4.15, 5.0.7, 6.1.2\nLink: [CVE-2021-32803](https://avd.aquasec.com/nvd/cve-2021-32803)\nThe npm package \"tar\" (aka node-tar) before versions 6.1.2, 5.0.7, 4.4.15, and 3.2.3 has an arbitrary File Creation/Overwrite vulnerability via insufficient symlink protection. `node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary `stat` calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory. This order of operations resulted in the directory being created and added to the `node-tar` directory cache. When a directory is present in the directory cache, subsequent calls to mkdir for that directory are skipped. However, this is also where `node-tar` checks for symlinks occur. By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass `node-tar` symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. This issue was addressed in releases 3.2.3, 4.4.15, 5.0.7 and 6.1.2.",
                "markdown": "**Vulnerability CVE-2021-32803**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|tar|3.2.3, 4.4.15, 5.0.7, 6.1.2|[CVE-2021-32803](https://avd.aquasec.com/nvd/cve-2021-32803)|\n\nThe npm package \"tar\" (aka node-tar) before versions 6.1.2, 5.0.7, 4.4.15, and 3.2.3 has an arbitrary File Creation/Overwrite vulnerability via insufficient symlink protection. `node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary `stat` calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory. This order of operations resulted in the directory being created and added to the `node-tar` directory cache. When a directory is present in the directory cache, subsequent calls to mkdir for that directory are skipped. However, this is also where `node-tar` checks for symlinks occur. By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass `node-tar` symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. This issue was addressed in releases 3.2.3, 4.4.15, 5.0.7 and 6.1.2."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.2",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-32804",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "nodejs-tar: Insufficient absolute path sanitization allowing arbitrary file creation and overwrite"
              },
              "fullDescription": {
                "text": "The npm package \u0026#34;tar\u0026#34; (aka node-tar) before versions 6.1.1, 5.0.6, 4.4.14, and 3.3.2 has a arbitrary File Creation/Overwrite vulnerability due to insufficient absolute path sanitization. node-tar aims to prevent extraction of absolute file paths by turning absolute paths into relative paths when the `preservePaths` flag is not set to `true`. This is achieved by stripping the absolute path root from any absolute file paths contained in a tar file. For example `/home/user/.bashrc` would turn into `home/user/.bashrc`. This logic was insufficient when file paths contained repeated path roots such as `////home/user/.bashrc`. `node-tar` would only strip a single path root from such paths. When given an absolute file path with repeating path roots, the resulting path (e.g. `///home/user/.bashrc`) would still resolve to an absolute path, thus allowing arbitrary file creation and overwrite. This issue was addressed in releases 3.2.2, 4.4.14, 5.0.6 and 6.1.1. Users may work around this vulnerability without upgrading by creating a custom `onentry` method which sanitizes the `entry.path` or a `filter` method which removes entries with absolute paths. See referenced GitHub Advisory for details. Be aware of CVE-2021-32803 which fixes a similar bug in later versions of tar."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-32804",
              "help": {
                "text": "Vulnerability CVE-2021-32804\nSeverity: HIGH\nPackage: tar\nFixed Version: 3.2.2, 4.4.14, 5.0.6, 6.1.1\nLink: [CVE-2021-32804](https://avd.aquasec.com/nvd/cve-2021-32804)\nThe npm package \"tar\" (aka node-tar) before versions 6.1.1, 5.0.6, 4.4.14, and 3.3.2 has a arbitrary File Creation/Overwrite vulnerability due to insufficient absolute path sanitization. node-tar aims to prevent extraction of absolute file paths by turning absolute paths into relative paths when the `preservePaths` flag is not set to `true`. This is achieved by stripping the absolute path root from any absolute file paths contained in a tar file. For example `/home/user/.bashrc` would turn into `home/user/.bashrc`. This logic was insufficient when file paths contained repeated path roots such as `////home/user/.bashrc`. `node-tar` would only strip a single path root from such paths. When given an absolute file path with repeating path roots, the resulting path (e.g. `///home/user/.bashrc`) would still resolve to an absolute path, thus allowing arbitrary file creation and overwrite. This issue was addressed in releases 3.2.2, 4.4.14, 5.0.6 and 6.1.1. Users may work around this vulnerability without upgrading by creating a custom `onentry` method which sanitizes the `entry.path` or a `filter` method which removes entries with absolute paths. See referenced GitHub Advisory for details. Be aware of CVE-2021-32803 which fixes a similar bug in later versions of tar.",
                "markdown": "**Vulnerability CVE-2021-32804**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|tar|3.2.2, 4.4.14, 5.0.6, 6.1.1|[CVE-2021-32804](https://avd.aquasec.com/nvd/cve-2021-32804)|\n\nThe npm package \"tar\" (aka node-tar) before versions 6.1.1, 5.0.6, 4.4.14, and 3.3.2 has a arbitrary File Creation/Overwrite vulnerability due to insufficient absolute path sanitization. node-tar aims to prevent extraction of absolute file paths by turning absolute paths into relative paths when the `preservePaths` flag is not set to `true`. This is achieved by stripping the absolute path root from any absolute file paths contained in a tar file. For example `/home/user/.bashrc` would turn into `home/user/.bashrc`. This logic was insufficient when file paths contained repeated path roots such as `////home/user/.bashrc`. `node-tar` would only strip a single path root from such paths. When given an absolute file path with repeating path roots, the resulting path (e.g. `///home/user/.bashrc`) would still resolve to an absolute path, thus allowing arbitrary file creation and overwrite. This issue was addressed in releases 3.2.2, 4.4.14, 5.0.6 and 6.1.1. Users may work around this vulnerability without upgrading by creating a custom `onentry` method which sanitizes the `entry.path` or a `filter` method which removes entries with absolute paths. See referenced GitHub Advisory for details. Be aware of CVE-2021-32803 which fixes a similar bug in later versions of tar."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.2",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-37701",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "nodejs-tar: Insufficient symlink protection due to directory cache poisoning using symbolic links allowing arbitrary file creation and overwrite"
              },
              "fullDescription": {
                "text": "The npm package \u0026#34;tar\u0026#34; (aka node-tar) before versions 4.4.16, 5.0.8, and 6.1.7 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory, where the symlink and directory names in the archive entry used backslashes as a path separator on posix systems. The cache checking logic used both `\\` and `/` characters as path separators, however `\\` is a valid filename character on posix systems. By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. Additionally, a similar confusion could arise on case-insensitive filesystems. If a tar archive contained a directory at `FOO`, followed by a symbolic link named `foo`, then on case-insensitive file systems, the creation of the symbolic link would remove the directory from the filesystem, but _not_ from the internal directory cache, as it would not be treated as a cache hit. A subsequent file entry within the `FOO` directory would then be placed in the target of the symbolic link, thinking that the directory had already been created. These issues were addressed in releases 4.4.16, 5.0.8 and 6.1.7. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. If this is not possible, a workaround is available in the referenced GHSA-9r2w-394v-53qc."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-37701",
              "help": {
                "text": "Vulnerability CVE-2021-37701\nSeverity: HIGH\nPackage: tar\nFixed Version: 4.4.16, 5.0.8, 6.1.7\nLink: [CVE-2021-37701](https://avd.aquasec.com/nvd/cve-2021-37701)\nThe npm package \"tar\" (aka node-tar) before versions 4.4.16, 5.0.8, and 6.1.7 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory, where the symlink and directory names in the archive entry used backslashes as a path separator on posix systems. The cache checking logic used both `\\` and `/` characters as path separators, however `\\` is a valid filename character on posix systems. By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. Additionally, a similar confusion could arise on case-insensitive filesystems. If a tar archive contained a directory at `FOO`, followed by a symbolic link named `foo`, then on case-insensitive file systems, the creation of the symbolic link would remove the directory from the filesystem, but _not_ from the internal directory cache, as it would not be treated as a cache hit. A subsequent file entry within the `FOO` directory would then be placed in the target of the symbolic link, thinking that the directory had already been created. These issues were addressed in releases 4.4.16, 5.0.8 and 6.1.7. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. If this is not possible, a workaround is available in the referenced GHSA-9r2w-394v-53qc.",
                "markdown": "**Vulnerability CVE-2021-37701**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|tar|4.4.16, 5.0.8, 6.1.7|[CVE-2021-37701](https://avd.aquasec.com/nvd/cve-2021-37701)|\n\nThe npm package \"tar\" (aka node-tar) before versions 4.4.16, 5.0.8, and 6.1.7 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory, where the symlink and directory names in the archive entry used backslashes as a path separator on posix systems. The cache checking logic used both `\\` and `/` characters as path separators, however `\\` is a valid filename character on posix systems. By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. Additionally, a similar confusion could arise on case-insensitive filesystems. If a tar archive contained a directory at `FOO`, followed by a symbolic link named `foo`, then on case-insensitive file systems, the creation of the symbolic link would remove the directory from the filesystem, but _not_ from the internal directory cache, as it would not be treated as a cache hit. A subsequent file entry within the `FOO` directory would then be placed in the target of the symbolic link, thinking that the directory had already been created. These issues were addressed in releases 4.4.16, 5.0.8 and 6.1.7. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. If this is not possible, a workaround is available in the referenced GHSA-9r2w-394v-53qc."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.2",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-37712",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "nodejs-tar: Insufficient symlink protection due to directory cache poisoning using symbolic links allowing arbitrary file creation and overwrite"
              },
              "fullDescription": {
                "text": "The npm package \u0026#34;tar\u0026#34; (aka node-tar) before versions 4.4.18, 5.0.10, and 6.1.9 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with names containing unicode values that normalized to the same value. Additionally, on Windows systems, long path portions would resolve to the same file system entities as their 8.3 \u0026#34;short path\u0026#34; counterparts. A specially crafted tar archive could thus include a directory with one form of the path, followed by a symbolic link with a different string that resolves to the same file system entity, followed by a file using the first form. By first creating a directory, and then replacing that directory with a symlink that had a different apparent name that resolved to the same entry in the filesystem, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. These issues were addressed in releases 4.4.18, 5.0.10 and 6.1.9. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. If this is not possible, a workaround is available in the referenced GHSA-qq89-hq3f-393p."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-37712",
              "help": {
                "text": "Vulnerability CVE-2021-37712\nSeverity: HIGH\nPackage: tar\nFixed Version: 4.4.18, 5.0.10, 6.1.9\nLink: [CVE-2021-37712](https://avd.aquasec.com/nvd/cve-2021-37712)\nThe npm package \"tar\" (aka node-tar) before versions 4.4.18, 5.0.10, and 6.1.9 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with names containing unicode values that normalized to the same value. Additionally, on Windows systems, long path portions would resolve to the same file system entities as their 8.3 \"short path\" counterparts. A specially crafted tar archive could thus include a directory with one form of the path, followed by a symbolic link with a different string that resolves to the same file system entity, followed by a file using the first form. By first creating a directory, and then replacing that directory with a symlink that had a different apparent name that resolved to the same entry in the filesystem, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. These issues were addressed in releases 4.4.18, 5.0.10 and 6.1.9. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. If this is not possible, a workaround is available in the referenced GHSA-qq89-hq3f-393p.",
                "markdown": "**Vulnerability CVE-2021-37712**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|tar|4.4.18, 5.0.10, 6.1.9|[CVE-2021-37712](https://avd.aquasec.com/nvd/cve-2021-37712)|\n\nThe npm package \"tar\" (aka node-tar) before versions 4.4.18, 5.0.10, and 6.1.9 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with names containing unicode values that normalized to the same value. Additionally, on Windows systems, long path portions would resolve to the same file system entities as their 8.3 \"short path\" counterparts. A specially crafted tar archive could thus include a directory with one form of the path, followed by a symbolic link with a different string that resolves to the same file system entity, followed by a file using the first form. By first creating a directory, and then replacing that directory with a symlink that had a different apparent name that resolved to the same entry in the filesystem, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. These issues were addressed in releases 4.4.18, 5.0.10 and 6.1.9. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. If this is not possible, a workaround is available in the referenced GHSA-qq89-hq3f-393p."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.2",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2021-37713",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "nodejs-tar: Arbitrary File Creation/Overwrite on Windows via insufficient relative path sanitization"
              },
              "fullDescription": {
                "text": "The npm package \u0026#34;tar\u0026#34; (aka node-tar) before versions 4.4.18, 5.0.10, and 6.1.9 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be outside of the extraction target directory is not extracted. This is, in part, accomplished by sanitizing absolute paths of entries within the archive, skipping archive entries that contain `..` path portions, and resolving the sanitized paths against the extraction target directory. This logic was insufficient on Windows systems when extracting tar files that contained a path that was not an absolute path, but specified a drive letter different from the extraction target, such as `C:some\\path`. If the drive letter does not match the extraction target, for example `D:\\extraction\\dir`, then the result of `path.resolve(extractionDirectory, entryPath)` would resolve against the current working directory on the `C:` drive, rather than the extraction target directory. Additionally, a `..` portion of the path could occur immediately after the drive letter, such as `C:../foo`, and was not properly sanitized by the logic that checked for `..` within the normalized and split portions of the path. This only affects users of `node-tar` on Windows systems. These issues were addressed in releases 4.4.18, 5.0.10 and 6.1.9. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. There is no reasonable way to work around this issue without performing the same path normalization procedures that node-tar now does. Users are encouraged to upgrade to the latest patched versions of node-tar, rather than attempt to sanitize paths themselves."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-37713",
              "help": {
                "text": "Vulnerability CVE-2021-37713\nSeverity: HIGH\nPackage: tar\nFixed Version: 4.4.18, 5.0.10, 6.1.9\nLink: [CVE-2021-37713](https://avd.aquasec.com/nvd/cve-2021-37713)\nThe npm package \"tar\" (aka node-tar) before versions 4.4.18, 5.0.10, and 6.1.9 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be outside of the extraction target directory is not extracted. This is, in part, accomplished by sanitizing absolute paths of entries within the archive, skipping archive entries that contain `..` path portions, and resolving the sanitized paths against the extraction target directory. This logic was insufficient on Windows systems when extracting tar files that contained a path that was not an absolute path, but specified a drive letter different from the extraction target, such as `C:some\\path`. If the drive letter does not match the extraction target, for example `D:\\extraction\\dir`, then the result of `path.resolve(extractionDirectory, entryPath)` would resolve against the current working directory on the `C:` drive, rather than the extraction target directory. Additionally, a `..` portion of the path could occur immediately after the drive letter, such as `C:../foo`, and was not properly sanitized by the logic that checked for `..` within the normalized and split portions of the path. This only affects users of `node-tar` on Windows systems. These issues were addressed in releases 4.4.18, 5.0.10 and 6.1.9. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. There is no reasonable way to work around this issue without performing the same path normalization procedures that node-tar now does. Users are encouraged to upgrade to the latest patched versions of node-tar, rather than attempt to sanitize paths themselves.",
                "markdown": "**Vulnerability CVE-2021-37713**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|tar|4.4.18, 5.0.10, 6.1.9|[CVE-2021-37713](https://avd.aquasec.com/nvd/cve-2021-37713)|\n\nThe npm package \"tar\" (aka node-tar) before versions 4.4.18, 5.0.10, and 6.1.9 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be outside of the extraction target directory is not extracted. This is, in part, accomplished by sanitizing absolute paths of entries within the archive, skipping archive entries that contain `..` path portions, and resolving the sanitized paths against the extraction target directory. This logic was insufficient on Windows systems when extracting tar files that contained a path that was not an absolute path, but specified a drive letter different from the extraction target, such as `C:some\\path`. If the drive letter does not match the extraction target, for example `D:\\extraction\\dir`, then the result of `path.resolve(extractionDirectory, entryPath)` would resolve against the current working directory on the `C:` drive, rather than the extraction target directory. Additionally, a `..` portion of the path could occur immediately after the drive letter, such as `C:../foo`, and was not properly sanitized by the logic that checked for `..` within the normalized and split portions of the path. This only affects users of `node-tar` on Windows systems. These issues were addressed in releases 4.4.18, 5.0.10 and 6.1.9. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. There is no reasonable way to work around this issue without performing the same path normalization procedures that node-tar now does. Users are encouraged to upgrade to the latest patched versions of node-tar, rather than attempt to sanitize paths themselves."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.2",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-28863",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "node-tar: denial of service while parsing a tar file due to lack of folders depth validation"
              },
              "fullDescription": {
                "text": "node-tar is a Tar for Node.js. node-tar prior to version 6.2.1 has no limit on the number of sub-folders created in the folder creation process. An attacker who generates a large number of sub-folders can consume memory on the system running node-tar and even crash the Node.js client within few seconds of running it using a path with too many sub-folders inside. Version 6.2.1 fixes this issue by preventing extraction in excessively deep sub-folders."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-28863",
              "help": {
                "text": "Vulnerability CVE-2024-28863\nSeverity: MEDIUM\nPackage: tar\nFixed Version: 6.2.1\nLink: [CVE-2024-28863](https://avd.aquasec.com/nvd/cve-2024-28863)\nnode-tar is a Tar for Node.js. node-tar prior to version 6.2.1 has no limit on the number of sub-folders created in the folder creation process. An attacker who generates a large number of sub-folders can consume memory on the system running node-tar and even crash the Node.js client within few seconds of running it using a path with too many sub-folders inside. Version 6.2.1 fixes this issue by preventing extraction in excessively deep sub-folders.",
                "markdown": "**Vulnerability CVE-2024-28863**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|tar|6.2.1|[CVE-2024-28863](https://avd.aquasec.com/nvd/cve-2024-28863)|\n\nnode-tar is a Tar for Node.js. node-tar prior to version 6.2.1 has no limit on the number of sub-folders created in the folder creation process. An attacker who generates a large number of sub-folders can consume memory on the system running node-tar and even crash the Node.js client within few seconds of running it using a path with too many sub-folders inside. Version 6.2.1 fixes this issue by preventing extraction in excessively deep sub-folders."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2015-8858",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "The uglify-js package before 2.6.0 for Node.js allows attackers to cau ..."
              },
              "fullDescription": {
                "text": "The uglify-js package before 2.6.0 for Node.js allows attackers to cause a denial of service (CPU consumption) via crafted input in a parse call, aka a \u0026#34;regular expression denial of service (ReDoS).\u0026#34;"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2015-8858",
              "help": {
                "text": "Vulnerability CVE-2015-8858\nSeverity: MEDIUM\nPackage: uglify-js\nFixed Version: \u003e=2.6.0\nLink: [CVE-2015-8858](https://avd.aquasec.com/nvd/cve-2015-8858)\nThe uglify-js package before 2.6.0 for Node.js allows attackers to cause a denial of service (CPU consumption) via crafted input in a parse call, aka a \"regular expression denial of service (ReDoS).\"",
                "markdown": "**Vulnerability CVE-2015-8858**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|uglify-js|\u003e=2.6.0|[CVE-2015-8858](https://avd.aquasec.com/nvd/cve-2015-8858)|\n\nThe uglify-js package before 2.6.0 for Node.js allows attackers to cause a denial of service (CPU consumption) via crafted input in a parse call, aka a \"regular expression denial of service (ReDoS).\""
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2021-23358",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "nodejs-underscore: Arbitrary code execution via the template function"
              },
              "fullDescription": {
                "text": "The package underscore from 1.13.0-0 and before 1.13.0-2, from 1.3.2 and before 1.12.1 are vulnerable to Arbitrary Code Injection via the template function, particularly when a variable property is passed as an argument as it is not sanitized."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2021-23358",
              "help": {
                "text": "Vulnerability CVE-2021-23358\nSeverity: CRITICAL\nPackage: underscore\nFixed Version: 1.12.1\nLink: [CVE-2021-23358](https://avd.aquasec.com/nvd/cve-2021-23358)\nThe package underscore from 1.13.0-0 and before 1.13.0-2, from 1.3.2 and before 1.12.1 are vulnerable to Arbitrary Code Injection via the template function, particularly when a variable property is passed as an argument as it is not sanitized.",
                "markdown": "**Vulnerability CVE-2021-23358**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|underscore|1.12.1|[CVE-2021-23358](https://avd.aquasec.com/nvd/cve-2021-23358)|\n\nThe package underscore from 1.13.0-0 and before 1.13.0-2, from 1.3.2 and before 1.12.1 are vulnerable to Arbitrary Code Injection via the template function, particularly when a variable property is passed as an argument as it is not sanitized."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "9.8",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "NSWG-ECO-445",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Out-of-bounds Read"
              },
              "fullDescription": {
                "text": "`utile` allocates uninitialized Buffers when number is passed in input"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://hackerone.com/reports/321701",
              "help": {
                "text": "Vulnerability NSWG-ECO-445\nSeverity: LOW\nPackage: utile\nFixed Version: \nLink: [NSWG-ECO-445](https://hackerone.com/reports/321701)\n`utile` allocates uninitialized Buffers when number is passed in input",
                "markdown": "**Vulnerability NSWG-ECO-445**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|utile||[NSWG-ECO-445](https://hackerone.com/reports/321701)|\n\n`utile` allocates uninitialized Buffers when number is passed in input"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2020-7774",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "nodejs-y18n: prototype pollution vulnerability"
              },
              "fullDescription": {
                "text": "The package y18n before 3.2.2, 4.0.1 and 5.0.5, is vulnerable to Prototype Pollution."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2020-7774",
              "help": {
                "text": "Vulnerability CVE-2020-7774\nSeverity: HIGH\nPackage: y18n\nFixed Version: 3.2.2, 4.0.1, 5.0.5\nLink: [CVE-2020-7774](https://avd.aquasec.com/nvd/cve-2020-7774)\nThe package y18n before 3.2.2, 4.0.1 and 5.0.5, is vulnerable to Prototype Pollution.",
                "markdown": "**Vulnerability CVE-2020-7774**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|y18n|3.2.2, 4.0.1, 5.0.5|[CVE-2020-7774](https://avd.aquasec.com/nvd/cve-2020-7774)|\n\nThe package y18n before 3.2.2, 4.0.1 and 5.0.5, is vulnerable to Prototype Pollution."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "private-key",
              "name": "Secret",
              "shortDescription": {
                "text": "Asymmetric Private Key"
              },
              "fullDescription": {
                "text
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://github.com/aquasecurity/trivy/blob/main/pkg/fanal/secret/builtin-rules.go",
              "help": {
                "text": "Secret Asymmetric Private Key\nSeverity: HIGH\nMatch
                "markdown": "**Secret Asymmetric Private Key**\n| Severity | Match |\n| --- | --- |\n|HIGH||"
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "secret",
                  "security",
                  "HIGH"
                ]
              }
            }
          ],
          "version": "0.59.1"
        }
      },
      "results": [
        {
          "ruleId": "CVE-2024-45590",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "Package: body-parser\nInstalled Version: 1.18.3\nVulnerability CVE-2024-45590\nSeverity: HIGH\nFixed Version: 1.20.3\nLink: [CVE-2024-45590](https://avd.aquasec.com/nvd/cve-2024-45590)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 637,
                  "startColumn": 1,
                  "endLine": 656,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: body-parser@1.18.3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4068",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "Package: braces\nInstalled Version: 2.3.2\nVulnerability CVE-2024-4068\nSeverity: HIGH\nFixed Version: 3.0.3\nLink: [CVE-2024-4068](https://avd.aquasec.com/nvd/cve-2024-4068)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 774,
                  "startColumn": 1,
                  "endLine": 793,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: braces@2.3.2"
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 6000,
                  "startColumn": 1,
                  "endLine": 6020,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: braces@2.3.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7610",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "Package: bson\nInstalled Version: 1.0.9\nVulnerability CVE-2020-7610\nSeverity: CRITICAL\nFixed Version: 1.1.4\nLink: [CVE-2020-7610](https://avd.aquasec.com/nvd/cve-2020-7610)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 897,
                  "startColumn": 1,
                  "endLine": 905,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: bson@1.0.9"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-2391",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Package: bson\nInstalled Version: 1.0.9\nVulnerability CVE-2019-2391\nSeverity: MEDIUM\nFixed Version: 1.1.4\nLink: [CVE-2019-2391](https://avd.aquasec.com/nvd/cve-2019-2391)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 897,
                  "startColumn": 1,
                  "endLine": 905,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: bson@1.0.9"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-47764",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Package: cookie\nInstalled Version: 0.3.1\nVulnerability CVE-2024-47764\nSeverity: LOW\nFixed Version: 0.7.0\nLink: [CVE-2024-47764](https://avd.aquasec.com/nvd/cve-2024-47764)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1466,
                  "startColumn": 1,
                  "endLine": 1473,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: cookie@0.3.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-20165",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "Package: debug\nInstalled Version: 2.2.0\nVulnerability CVE-2017-20165\nSeverity: HIGH\nFixed Version: 3.1.0, 2.6.9\nLink: [CVE-2017-20165](https://avd.aquasec.com/nvd/cve-2017-20165)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1384,
                  "startColumn": 1,
                  "endLine": 1391,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: debug@2.2.0"
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 6956,
                  "startColumn": 1,
                  "endLine": 6964,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: debug@2.2.0"
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 8318,
                  "startColumn": 1,
                  "endLine": 8326,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: debug@2.2.0"
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 10447,
                  "startColumn": 1,
                  "endLine": 10455,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: debug@2.2.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-16137",
          "ruleIndex": 6,
          "level": "note",
          "message": {
            "text": "Package: debug\nInstalled Version: 2.2.0\nVulnerability CVE-2017-16137\nSeverity: LOW\nFixed Version: 2.6.9, 3.1.0, 3.2.7, 4.3.1\nLink: [CVE-2017-16137](https://avd.aquasec.com/nvd/cve-2017-16137)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1384,
                  "startColumn": 1,
                  "endLine": 1391,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: debug@2.2.0"
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 6956,
                  "startColumn": 1,
                  "endLine": 6964,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: debug@2.2.0"
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 8318,
                  "startColumn": 1,
                  "endLine": 8326,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: debug@2.2.0"
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 10447,
                  "startColumn": 1,
                  "endLine": 10455,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: debug@2.2.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-16137",
          "ruleIndex": 6,
          "level": "note",
          "message": {
            "text": "Package: debug\nInstalled Version: 4.1.1\nVulnerability CVE-2017-16137\nSeverity: LOW\nFixed Version: 2.6.9, 3.1.0, 3.2.7, 4.3.1\nLink: [CVE-2017-16137](https://avd.aquasec.com/nvd/cve-2017-16137)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 3387,
                  "startColumn": 1,
                  "endLine": 3395,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: debug@4.1.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-38900",
          "ruleIndex": 7,
          "level": "error",
          "message": {
            "text": "Package: decode-uri-component\nInstalled Version: 0.2.0\nVulnerability CVE-2022-38900\nSeverity: HIGH\nFixed Version: 0.2.1\nLink: [CVE-2022-38900](https://avd.aquasec.com/nvd/cve-2022-38900)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 2072,
                  "startColumn": 1,
                  "endLine": 2079,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: decode-uri-component@0.2.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-29041",
          "ruleIndex": 8,
          "level": "warning",
          "message": {
            "text": "Package: express\nInstalled Version: 4.16.4\nVulnerability CVE-2024-29041\nSeverity: MEDIUM\nFixed Version: 4.19.2, 5.0.0-beta.3\nLink: [CVE-2024-29041](https://avd.aquasec.com/nvd/cve-2024-29041)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 2684,
                  "startColumn": 1,
                  "endLine": 2723,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: express@4.16.4"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-43796",
          "ruleIndex": 9,
          "level": "note",
          "message": {
            "text": "Package: express\nInstalled Version: 4.16.4\nVulnerability CVE-2024-43796\nSeverity: LOW\nFixed Version: 4.20.0, 5.0.0\nLink: [CVE-2024-43796](https://avd.aquasec.com/nvd/cve-2024-43796)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 2684,
                  "startColumn": 1,
                  "endLine": 2723,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: express@4.16.4"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45311",
          "ruleIndex": 10,
          "level": "error",
          "message": {
            "text": "Package: fsevents\nInstalled Version: 1.2.9\nVulnerability CVE-2023-45311\nSeverity: CRITICAL\nFixed Version: 1.2.11\nLink: [CVE-2023-45311](https://avd.aquasec.com/nvd/cve-2023-45311)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 3286,
                  "startColumn": 1,
                  "endLine": 3306,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: fsevents@1.2.9"
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-c3m8-x3cg-qm2c",
          "ruleIndex": 11,
          "level": "warning",
          "message": {
            "text": "Package: helmet-csp\nInstalled Version: 1.2.2\nVulnerability GHSA-c3m8-x3cg-qm2c\nSeverity: MEDIUM\nFixed Version: 2.9.1\nLink: [GHSA-c3m8-x3cg-qm2c](https://github.com/advisories/GHSA-c3m8-x3cg-qm2c)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 4986,
                  "startColumn": 1,
                  "endLine": 4996,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: helmet-csp@1.2.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3820",
          "ruleIndex": 12,
          "level": "error",
          "message": {
            "text": "Package: i\nInstalled Version: 0.3.6\nVulnerability CVE-2021-3820\nSeverity: HIGH\nFixed Version: 0.3.7\nLink: [CVE-2021-3820](https://avd.aquasec.com/nvd/cve-2021-3820)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 5124,
                  "startColumn": 1,
                  "endLine": 5131,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: i@0.3.6"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7788",
          "ruleIndex": 13,
          "level": "error",
          "message": {
            "text": "Package: ini\nInstalled Version: 1.3.5\nVulnerability CVE-2020-7788\nSeverity: HIGH\nFixed Version: 1.3.6\nLink: [CVE-2020-7788](https://avd.aquasec.com/nvd/cve-2020-7788)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 3514,
                  "startColumn": 1,
                  "endLine": 3522,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: ini@1.3.5"
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 5198,
                  "startColumn": 1,
                  "endLine": 5206,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: ini@1.3.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-20149",
          "ruleIndex": 14,
          "level": "error",
          "message": {
            "text": "Package: kind-of\nInstalled Version: 6.0.2\nVulnerability CVE-2019-20149\nSeverity: HIGH\nFixed Version: 6.0.3\nLink: [CVE-2019-20149](https://avd.aquasec.com/nvd/cve-2019-20149)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 554,
                  "startColumn": 1,
                  "endLine": 561,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: kind-of@6.0.2"
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 2189,
                  "startColumn": 1,
                  "endLine": 2196,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: kind-of@6.0.2"
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 2866,
                  "startColumn": 1,
                  "endLine": 2873,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: kind-of@6.0.2"
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 6323,
                  "startColumn": 1,
                  "endLine": 6331,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: kind-of@6.0.2"
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 6705,
                  "startColumn": 1,
                  "endLine": 6713,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: kind-of@6.0.2"
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 6830,
                  "startColumn": 1,
                  "endLine": 6837,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: kind-of@6.0.2"
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 7136,
                  "startColumn": 1,
                  "endLine": 7143,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: kind-of@6.0.2"
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 13607,
                  "startColumn": 1,
                  "endLine": 13614,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: kind-of@6.0.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-16114",
          "ruleIndex": 15,
          "level": "error",
          "message": {
            "text": "Package: marked\nInstalled Version: 0.3.5\nVulnerability CVE-2017-16114\nSeverity: HIGH\nFixed Version: 0.3.9\nLink: [CVE-2017-16114](https://avd.aquasec.com/nvd/cve-2017-16114)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 6742,
                  "startColumn": 1,
                  "endLine": 6749,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: marked@0.3.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-21680",
          "ruleIndex": 16,
          "level": "error",
          "message": {
            "text": "Package: marked\nInstalled Version: 0.3.5\nVulnerability CVE-2022-21680\nSeverity: HIGH\nFixed Version: 4.0.10\nLink: [CVE-2022-21680](https://avd.aquasec.com/nvd/cve-2022-21680)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 6742,
                  "startColumn": 1,
                  "endLine": 6749,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: marked@0.3.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-21681",
          "ruleIndex": 17,
          "level": "error",
          "message": {
            "text": "Package: marked\nInstalled Version: 0.3.5\nVulnerability CVE-2022-21681\nSeverity: HIGH\nFixed Version: 4.0.10\nLink: [CVE-2022-21681](https://avd.aquasec.com/nvd/cve-2022-21681)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 6742,
                  "startColumn": 1,
                  "endLine": 6749,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: marked@0.3.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-10531",
          "ruleIndex": 18,
          "level": "warning",
          "message": {
            "text": "Package: marked\nInstalled Version: 0.3.5\nVulnerability CVE-2016-10531\nSeverity: MEDIUM\nFixed Version: 0.3.6\nLink: [CVE-2016-10531](https://avd.aquasec.com/nvd/cve-2016-10531)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 6742,
                  "startColumn": 1,
                  "endLine": 6749,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: marked@0.3.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-1000427",
          "ruleIndex": 19,
          "level": "warning",
          "message": {
            "text": "Package: marked\nInstalled Version: 0.3.5\nVulnerability CVE-2017-1000427\nSeverity: MEDIUM\nFixed Version: 0.3.7\nLink: [CVE-2017-1000427](https://avd.aquasec.com/nvd/cve-2017-1000427)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 6742,
                  "startColumn": 1,
                  "endLine": 6749,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: marked@0.3.5"
              }
            }
          ]
        },
        {
          "ruleId": "NSWG-ECO-101",
          "ruleIndex": 20,
          "level": "warning",
          "message": {
            "text": "Package: marked\nInstalled Version: 0.3.5\nVulnerability NSWG-ECO-101\nSeverity: MEDIUM\nFixed Version: \u003e=0.3.6\nLink: [NSWG-ECO-101]()"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 6742,
                  "startColumn": 1,
                  "endLine": 6749,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: marked@0.3.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4067",
          "ruleIndex": 21,
          "level": "warning",
          "message": {
            "text": "Package: micromatch\nInstalled Version: 3.1.10\nVulnerability CVE-2024-4067\nSeverity: MEDIUM\nFixed Version: 4.0.8\nLink: [CVE-2024-4067](https://avd.aquasec.com/nvd/cve-2024-4067)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 6332,
                  "startColumn": 1,
                  "endLine": 6355,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: micromatch@3.1.10"
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 6807,
                  "startColumn": 1,
                  "endLine": 6829,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: micromatch@3.1.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-3517",
          "ruleIndex": 22,
          "level": "error",
          "message": {
            "text": "Package: minimatch\nInstalled Version: 3.0.4\nVulnerability CVE-2022-3517\nSeverity: HIGH\nFixed Version: 3.0.5\nLink: [CVE-2022-3517](https://avd.aquasec.com/nvd/cve-2022-3517)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 3541,
                  "startColumn": 1,
                  "endLine": 3552,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: minimatch@3.0.4"
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 6865,
                  "startColumn": 1,
                  "endLine": 6875,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: minimatch@3.0.4"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44906",
          "ruleIndex": 23,
          "level": "error",
          "message": {
            "text": "Package: minimist\nInstalled Version: 0.0.10\nVulnerability CVE-2021-44906\nSeverity: CRITICAL\nFixed Version: 1.2.6, 0.2.4\nLink: [CVE-2021-44906](https://avd.aquasec.com/nvd/cve-2021-44906)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 6876,
                  "startColumn": 1,
                  "endLine": 6880,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: minimist@0.0.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7598",
          "ruleIndex": 24,
          "level": "warning",
          "message": {
            "text": "Package: minimist\nInstalled Version: 0.0.10\nVulnerability CVE-2020-7598\nSeverity: MEDIUM\nFixed Version: 0.2.1, 1.2.3\nLink: [CVE-2020-7598](https://avd.aquasec.com/nvd/cve-2020-7598)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 6876,
                  "startColumn": 1,
                  "endLine": 6880,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: minimist@0.0.10"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44906",
          "ruleIndex": 23,
          "level": "error",
          "message": {
            "text": "Package: minimist\nInstalled Version: 0.0.8\nVulnerability CVE-2021-44906\nSeverity: CRITICAL\nFixed Version: 1.2.6, 0.2.4\nLink: [CVE-2021-44906](https://avd.aquasec.com/nvd/cve-2021-44906)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 3553,
                  "startColumn": 1,
                  "endLine": 3558,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: minimist@0.0.8"
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 6917,
                  "startColumn": 1,
                  "endLine": 6921,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: minimist@0.0.8"
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 8082,
                  "startColumn": 1,
                  "endLine": 8087,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: minimist@0.0.8"
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 11238,
                  "startColumn": 1,
                  "endLine": 11243,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: minimist@0.0.8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7598",
          "ruleIndex": 24,
          "level": "warning",
          "message": {
            "text": "Package: minimist\nInstalled Version: 0.0.8\nVulnerability CVE-2020-7598\nSeverity: MEDIUM\nFixed Version: 0.2.1, 1.2.3\nLink: [CVE-2020-7598](https://avd.aquasec.com/nvd/cve-2020-7598)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 3553,
                  "startColumn": 1,
                  "endLine": 3558,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: minimist@0.0.8"
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 6917,
                  "startColumn": 1,
                  "endLine": 6921,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: minimist@0.0.8"
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 8082,
                  "startColumn": 1,
                  "endLine": 8087,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: minimist@0.0.8"
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 11238,
                  "startColumn": 1,
                  "endLine": 11243,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: minimist@0.0.8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44906",
          "ruleIndex": 23,
          "level": "error",
          "message": {
            "text": "Package: minimist\nInstalled Version: 1.2.0\nVulnerability CVE-2021-44906\nSeverity: CRITICAL\nFixed Version: 1.2.6, 0.2.4\nLink: [CVE-2021-44906](https://avd.aquasec.com/nvd/cve-2021-44906)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1524,
                  "startColumn": 1,
                  "endLine": 1529,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: minimist@1.2.0"
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1900,
                  "startColumn": 1,
                  "endLine": 1905,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: minimist@1.2.0"
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 3760,
                  "startColumn": 1,
                  "endLine": 3765,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: minimist@1.2.0"
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 6779,
                  "startColumn": 1,
                  "endLine": 6784,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: minimist@1.2.0"
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 10494,
                  "startColumn": 1,
                  "endLine": 10499,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: minimist@1.2.0"
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 12792,
                  "startColumn": 1,
                  "endLine": 12797,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: minimist@1.2.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7598",
          "ruleIndex": 24,
          "level": "warning",
          "message": {
            "text": "Package: minimist\nInstalled Version: 1.2.0\nVulnerability CVE-2020-7598\nSeverity: MEDIUM\nFixed Version: 0.2.1, 1.2.3\nLink: [CVE-2020-7598](https://avd.aquasec.com/nvd/cve-2020-7598)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1524,
                  "startColumn": 1,
                  "endLine": 1529,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: minimist@1.2.0"
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1900,
                  "startColumn": 1,
                  "endLine": 1905,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: minimist@1.2.0"
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 3760,
                  "startColumn": 1,
                  "endLine": 3765,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: minimist@1.2.0"
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 6779,
                  "startColumn": 1,
                  "endLine": 6784,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: minimist@1.2.0"
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 10494,
                  "startColumn": 1,
                  "endLine": 10499,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: minimist@1.2.0"
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 12792,
                  "startColumn": 1,
                  "endLine": 12797,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: minimist@1.2.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44906",
          "ruleIndex": 23,
          "level": "error",
          "message": {
            "text": "Package: minimist\nInstalled Version: 1.2.5\nVulnerability CVE-2021-44906\nSeverity: CRITICAL\nFixed Version: 1.2.6, 0.2.4\nLink: [CVE-2021-44906](https://avd.aquasec.com/nvd/cve-2021-44906)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 12596,
                  "startColumn": 1,
                  "endLine": 12600,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: minimist@1.2.5"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-10746",
          "ruleIndex": 25,
          "level": "error",
          "message": {
            "text": "Package: mixin-deep\nInstalled Version: 1.3.1\nVulnerability CVE-2019-10746\nSeverity: CRITICAL\nFixed Version: 1.3.2, 2.0.1\nLink: [CVE-2019-10746](https://avd.aquasec.com/nvd/cve-2019-10746)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 6881,
                  "startColumn": 1,
                  "endLine": 6893,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: mixin-deep@1.3.1"
              }
            }
          ]
        },
        {
          "ruleId": "GHSA-mh5c-679w-hh4r",
          "ruleIndex": 26,
          "level": "error",
          "message": {
            "text": "Package: mongodb\nInstalled Version: 2.2.36\nVulnerability GHSA-mh5c-679w-hh4r\nSeverity: HIGH\nFixed Version: 3.1.13\nLink: [GHSA-mh5c-679w-hh4r](https://github.com/advisories/GHSA-mh5c-679w-hh4r)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 7034,
                  "startColumn": 1,
                  "endLine": 7046,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: mongodb@2.2.36"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-20162",
          "ruleIndex": 27,
          "level": "warning",
          "message": {
            "text": "Package: ms\nInstalled Version: 0.7.1\nVulnerability CVE-2017-20162\nSeverity: MEDIUM\nFixed Version: 2.0.0\nLink: [CVE-2017-20162](https://avd.aquasec.com/nvd/cve-2017-20162)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1406,
                  "startColumn": 1,
                  "endLine": 1410,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: ms@0.7.1"
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 7007,
                  "startColumn": 1,
                  "endLine": 7012,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: ms@0.7.1"
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 8327,
                  "startColumn": 1,
                  "endLine": 8331,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: ms@0.7.1"
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 11256,
                  "startColumn": 1,
                  "endLine": 11260,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: ms@0.7.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-21803",
          "ruleIndex": 28,
          "level": "error",
          "message": {
            "text": "Package: nconf\nInstalled Version: 0.10.0\nVulnerability CVE-2022-21803\nSeverity: HIGH\nFixed Version: 0.11.4\nLink: [CVE-2022-21803](https://avd.aquasec.com/nvd/cve-2022-21803)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 7144,
                  "startColumn": 1,
                  "endLine": 7157,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: nconf@0.10.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-21803",
          "ruleIndex": 28,
          "level": "error",
          "message": {
            "text": "Package: nconf\nInstalled Version: 0.6.9\nVulnerability CVE-2022-21803\nSeverity: HIGH\nFixed Version: 0.11.4\nLink: [CVE-2022-21803](https://avd.aquasec.com/nvd/cve-2022-21803)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 838,
                  "startColumn": 1,
                  "endLine": 850,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: nconf@0.6.9"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-45296",
          "ruleIndex": 29,
          "level": "error",
          "message": {
            "text": "Package: path-to-regexp\nInstalled Version: 0.1.7\nVulnerability CVE-2024-45296\nSeverity: HIGH\nFixed Version: 1.9.0, 0.1.10, 8.0.0, 3.3.0, 6.3.0\nLink: [CVE-2024-45296](https://avd.aquasec.com/nvd/cve-2024-45296)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 12485,
                  "startColumn": 1,
                  "endLine": 12489,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: path-to-regexp@0.1.7"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-52798",
          "ruleIndex": 30,
          "level": "error",
          "message": {
            "text": "Package: path-to-regexp\nInstalled Version: 0.1.7\nVulnerability CVE-2024-52798\nSeverity: HIGH\nFixed Version: 0.1.12\nLink: [CVE-2024-52798](https://avd.aquasec.com/nvd/cve-2024-52798)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 12485,
                  "startColumn": 1,
                  "endLine": 12489,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: path-to-regexp@0.1.7"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24999",
          "ruleIndex": 31,
          "level": "error",
          "message": {
            "text": "Package: qs\nInstalled Version: 6.5.2\nVulnerability CVE-2022-24999\nSeverity: HIGH\nFixed Version: 6.10.3, 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, 6.2.4\nLink: [CVE-2022-24999](https://avd.aquasec.com/nvd/cve-2022-24999)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 12723,
                  "startColumn": 1,
                  "endLine": 12730,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: qs@6.5.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25883",
          "ruleIndex": 32,
          "level": "error",
          "message": {
            "text": "Package: semver\nInstalled Version: 5.6.0\nVulnerability CVE-2022-25883\nSeverity: HIGH\nFixed Version: 7.5.2, 6.3.1, 5.7.2\nLink: [CVE-2022-25883](https://avd.aquasec.com/nvd/cve-2022-25883)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 13262,
                  "startColumn": 1,
                  "endLine": 13269,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: semver@5.6.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25883",
          "ruleIndex": 32,
          "level": "error",
          "message": {
            "text": "Package: semver\nInstalled Version: 5.7.0\nVulnerability CVE-2022-25883\nSeverity: HIGH\nFixed Version: 7.5.2, 6.3.1, 5.7.2\nLink: [CVE-2022-25883](https://avd.aquasec.com/nvd/cve-2022-25883)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 3811,
                  "startColumn": 1,
                  "endLine": 3819,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: semver@5.7.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-43799",
          "ruleIndex": 33,
          "level": "note",
          "message": {
            "text": "Package: send\nInstalled Version: 0.16.2\nVulnerability CVE-2024-43799\nSeverity: LOW\nFixed Version: 0.19.0\nLink: [CVE-2024-43799](https://avd.aquasec.com/nvd/cve-2024-43799)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 13282,
                  "startColumn": 1,
                  "endLine": 13304,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: send@0.16.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-43800",
          "ruleIndex": 34,
          "level": "note",
          "message": {
            "text": "Package: serve-static\nInstalled Version: 1.13.2\nVulnerability CVE-2024-43800\nSeverity: LOW\nFixed Version: 1.16.0, 2.1.0\nLink: [CVE-2024-43800](https://avd.aquasec.com/nvd/cve-2024-43800)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 13338,
                  "startColumn": 1,
                  "endLine": 13351,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: serve-static@1.13.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-10747",
          "ruleIndex": 35,
          "level": "error",
          "message": {
            "text": "Package: set-value\nInstalled Version: 0.4.3\nVulnerability CVE-2019-10747\nSeverity: CRITICAL\nFixed Version: 2.0.1, 3.0.1\nLink: [CVE-2019-10747](https://avd.aquasec.com/nvd/cve-2019-10747)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 14498,
                  "startColumn": 1,
                  "endLine": 14512,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: set-value@0.4.3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23440",
          "ruleIndex": 36,
          "level": "error",
          "message": {
            "text": "Package: set-value\nInstalled Version: 0.4.3\nVulnerability CVE-2021-23440\nSeverity: HIGH\nFixed Version: 4.0.1, 2.0.1, 3.0.3\nLink: [CVE-2021-23440](https://avd.aquasec.com/nvd/cve-2021-23440)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 14498,
                  "startColumn": 1,
                  "endLine": 14512,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: set-value@0.4.3"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-10747",
          "ruleIndex": 35,
          "level": "error",
          "message": {
            "text": "Package: set-value\nInstalled Version: 2.0.0\nVulnerability CVE-2019-10747\nSeverity: CRITICAL\nFixed Version: 2.0.1, 3.0.1\nLink: [CVE-2019-10747](https://avd.aquasec.com/nvd/cve-2019-10747)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 13352,
                  "startColumn": 1,
                  "endLine": 13366,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: set-value@2.0.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23440",
          "ruleIndex": 36,
          "level": "error",
          "message": {
            "text": "Package: set-value\nInstalled Version: 2.0.0\nVulnerability CVE-2021-23440\nSeverity: HIGH\nFixed Version: 4.0.1, 2.0.1, 3.0.3\nLink: [CVE-2021-23440](https://avd.aquasec.com/nvd/cve-2021-23440)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 13352,
                  "startColumn": 1,
                  "endLine": 13366,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: set-value@2.0.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-25345",
          "ruleIndex": 37,
          "level": "error",
          "message": {
            "text": "Package: swig\nInstalled Version: 1.4.2\nVulnerability CVE-2023-25345\nSeverity: HIGH\nFixed Version: \nLink: [CVE-2023-25345](https://avd.aquasec.com/nvd/cve-2023-25345)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 14000,
                  "startColumn": 1,
                  "endLine": 14015,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: swig@1.4.2"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-32803",
          "ruleIndex": 38,
          "level": "error",
          "message": {
            "text": "Package: tar\nInstalled Version: 4.4.8\nVulnerability CVE-2021-32803\nSeverity: HIGH\nFixed Version: 3.2.3, 4.4.15, 5.0.7, 6.1.2\nLink: [CVE-2021-32803](https://avd.aquasec.com/nvd/cve-2021-32803)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 3876,
                  "startColumn": 1,
                  "endLine": 3893,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: tar@4.4.8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-32804",
          "ruleIndex": 39,
          "level": "error",
          "message": {
            "text": "Package: tar\nInstalled Version: 4.4.8\nVulnerability CVE-2021-32804\nSeverity: HIGH\nFixed Version: 3.2.2, 4.4.14, 5.0.6, 6.1.1\nLink: [CVE-2021-32804](https://avd.aquasec.com/nvd/cve-2021-32804)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 3876,
                  "startColumn": 1,
                  "endLine": 3893,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: tar@4.4.8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-37701",
          "ruleIndex": 40,
          "level": "error",
          "message": {
            "text": "Package: tar\nInstalled Version: 4.4.8\nVulnerability CVE-2021-37701\nSeverity: HIGH\nFixed Version: 4.4.16, 5.0.8, 6.1.7\nLink: [CVE-2021-37701](https://avd.aquasec.com/nvd/cve-2021-37701)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 3876,
                  "startColumn": 1,
                  "endLine": 3893,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: tar@4.4.8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-37712",
          "ruleIndex": 41,
          "level": "error",
          "message": {
            "text": "Package: tar\nInstalled Version: 4.4.8\nVulnerability CVE-2021-37712\nSeverity: HIGH\nFixed Version: 4.4.18, 5.0.10, 6.1.9\nLink: [CVE-2021-37712](https://avd.aquasec.com/nvd/cve-2021-37712)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 3876,
                  "startColumn": 1,
                  "endLine": 3893,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: tar@4.4.8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-37713",
          "ruleIndex": 42,
          "level": "error",
          "message": {
            "text": "Package: tar\nInstalled Version: 4.4.8\nVulnerability CVE-2021-37713\nSeverity: HIGH\nFixed Version: 4.4.18, 5.0.10, 6.1.9\nLink: [CVE-2021-37713](https://avd.aquasec.com/nvd/cve-2021-37713)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 3876,
                  "startColumn": 1,
                  "endLine": 3893,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: tar@4.4.8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28863",
          "ruleIndex": 43,
          "level": "warning",
          "message": {
            "text": "Package: tar\nInstalled Version: 4.4.8\nVulnerability CVE-2024-28863\nSeverity: MEDIUM\nFixed Version: 6.2.1\nLink: [CVE-2024-28863](https://avd.aquasec.com/nvd/cve-2024-28863)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 3876,
                  "startColumn": 1,
                  "endLine": 3893,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: tar@4.4.8"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2015-8858",
          "ruleIndex": 44,
          "level": "warning",
          "message": {
            "text": "Package: uglify-js\nInstalled Version: 2.4.24\nVulnerability CVE-2015-8858\nSeverity: MEDIUM\nFixed Version: \u003e=2.6.0\nLink: [CVE-2015-8858](https://avd.aquasec.com/nvd/cve-2015-8858)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 14372,
                  "startColumn": 1,
                  "endLine": 14388,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: uglify-js@2.4.24"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23358",
          "ruleIndex": 45,
          "level": "error",
          "message": {
            "text": "Package: underscore\nInstalled Version: 1.9.1\nVulnerability CVE-2021-23358\nSeverity: CRITICAL\nFixed Version: 1.12.1\nLink: [CVE-2021-23358](https://avd.aquasec.com/nvd/cve-2021-23358)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 14445,
                  "startColumn": 1,
                  "endLine": 14449,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: underscore@1.9.1"
              }
            }
          ]
        },
        {
          "ruleId": "NSWG-ECO-445",
          "ruleIndex": 46,
          "level": "note",
          "message": {
            "text": "Package: utile\nInstalled Version: 0.2.1\nVulnerability NSWG-ECO-445\nSeverity: LOW\nFixed Version: \nLink: [NSWG-ECO-445](https://hackerone.com/reports/321701)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 865,
                  "startColumn": 1,
                  "endLine": 880,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: utile@0.2.1"
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 12626,
                  "startColumn": 1,
                  "endLine": 12641,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: utile@0.2.1"
              }
            }
          ]
        },
        {
          "ruleId": "NSWG-ECO-445",
          "ruleIndex": 46,
          "level": "note",
          "message": {
            "text": "Package: utile\nInstalled Version: 0.3.0\nVulnerability NSWG-ECO-445\nSeverity: LOW\nFixed Version: \nLink: [NSWG-ECO-445](https://hackerone.com/reports/321701)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 14704,
                  "startColumn": 1,
                  "endLine": 14719,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: utile@0.3.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7774",
          "ruleIndex": 47,
          "level": "error",
          "message": {
            "text": "Package: y18n\nInstalled Version: 3.2.1\nVulnerability CVE-2020-7774\nSeverity: HIGH\nFixed Version: 3.2.2, 4.0.1, 5.0.5\nLink: [CVE-2020-7774](https://avd.aquasec.com/nvd/cve-2020-7774)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 11898,
                  "startColumn": 1,
                  "endLine": 11903,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: y18n@3.2.1"
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 15075,
                  "startColumn": 1,
                  "endLine": 15079,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: y18n@3.2.1"
              }
            }
          ]
        },
        {
          "ruleId": "private-key",
          "ruleIndex": 48,
          "level": "error",
          "message": {
            "text": "Artifact: artifacts/cert/server.key\nType: \nSecret Asymmetric Private Key\nSeverity: HIGH\nMatch
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "artifacts/cert/server.key",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "artifacts/cert/server.key"
              }
            }
          ]
        }
      ],
      "columnKind": "utf16CodeUnits",
      "originalUriBaseIds": {
        "ROOTPATH": {
          "uri": "file:///Users/chakrava/go/src/scan_projects/nodegoat_url_encoded/"
        }
      }
    }
  ]
}